// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITest_Kho
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinComboBox uICboLoaiComboBox = this.UIQuảnlýkhoWindow.UICboLoaiWindow.UICboLoaiComboBox;
            WinComboBox uICboSanPhamComboBox = this.UIQuảnlýkhoWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinEdit uITxtSoLuongNhapEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongNhapWindow.UITxtSoLuongNhapEdit;
            WinEdit uITxtNhaCungCapEdit = this.UIQuảnlýkhoWindow.UITxtNhaCungCapWindow.UITxtNhaCungCapEdit;
            WinButton uICậpnhậtButton = this.UIQuảnlýkhoWindow.UICậpnhậtWindow.UICậpnhậtButton;
            WinButton uIOKButton = this.UIThôngbáoWindow.UIOKWindow.UIOKButton;
            WinEdit uITxtSoLuongEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongWindow.UITxtSoLuongEdit;
            #endregion

            // Select 'Son       ' in 'cboLoai' combo box
            uICboLoaiComboBox.SelectedItem = this.RecordedMethod1Params.UICboLoaiComboBoxSelectedItem;

            // Select 'Son môi Mamonde Creamy Tint Color Balm Intense' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod1Params.UICboSanPhamComboBoxSelectedItem;

            // Select 'Son       ' in 'cboLoai' combo box
            uICboLoaiComboBox.SelectedItem = this.RecordedMethod1Params.UICboLoaiComboBoxSelectedItem1;

            // Select 'Son môi Mamonde Creamy Tint Color Balm Intense' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod1Params.UICboSanPhamComboBoxSelectedItem1;

            // Type '30' in 'txtSoLuongNhap' text box
            uITxtSoLuongNhapEdit.Text = this.RecordedMethod1Params.UITxtSoLuongNhapEditText;

            // Type 'dat' in 'txtNhaCungCap' text box
            uITxtNhaCungCapEdit.Text = this.RecordedMethod1Params.UITxtNhaCungCapEditText;

            // Click 'Cập nhật' button
            Mouse.Click(uICậpnhậtButton, new Point(89, 30));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(51, 4));

            // Select 'Son môi Mamonde Creamy Tint Color Balm Intense' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod1Params.UICboSanPhamComboBoxSelectedItem2;

            // Click 'txtSoLuong' text box
            Mouse.Click(uITxtSoLuongEdit, new Point(52, 8));
        }
        
        /// <summary>
        /// RecordedMethod2 - Use 'RecordedMethod2Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod2()
        {
            #region Variable Declarations
            WinComboBox uICboLoaiComboBox = this.UIQuảnlýkhoWindow.UICboLoaiWindow.UICboLoaiComboBox;
            WinComboBox uICboSanPhamComboBox = this.UIQuảnlýkhoWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinEdit uITxtSoLuongNhapEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongNhapWindow.UITxtSoLuongNhapEdit;
            WinEdit uITxtNhaCungCapEdit = this.UIQuảnlýkhoWindow.UITxtNhaCungCapWindow.UITxtNhaCungCapEdit;
            WinButton uICậpnhậtButton = this.UIQuảnlýkhoWindow.UICậpnhậtWindow.UICậpnhậtButton;
            WinButton uIOKButton = this.UIThôngbáoWindow.UIOKWindow.UIOKButton;
            #endregion

            // Select 'Sua Tam   ' in 'cboLoai' combo box
            uICboLoaiComboBox.SelectedItem = this.RecordedMethod2Params.UICboLoaiComboBoxSelectedItem;

            // Select 'White conc' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod2Params.UICboSanPhamComboBoxSelectedItem;

            // Type '4' in 'txtSoLuongNhap' text box
            uITxtSoLuongNhapEdit.Text = this.RecordedMethod2Params.UITxtSoLuongNhapEditText;

            // Type 'dat' in 'txtNhaCungCap' text box
            uITxtNhaCungCapEdit.Text = this.RecordedMethod2Params.UITxtNhaCungCapEditText;

            // Click 'Cập nhật' button
            Mouse.Click(uICậpnhậtButton, new Point(39, 41));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(48, 8));

            // Select 'White conc' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod2Params.UICboSanPhamComboBoxSelectedItem1;
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            WinCell uIItem760Cell = this.UIQuảnlýkhoWindow.UIDtgKhoWindow.UIDataGridViewTable.UIRow3Row.UIItem760Cell;
            #endregion

            // Verify that the 'FriendlyName' property of '760' cell equals '760'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIItem760CellFriendlyName, uIItem760Cell.FriendlyName);
        }
        
        /// <summary>
        /// RecordedMethod3 - Use 'RecordedMethod3Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod3()
        {
            #region Variable Declarations
            WinComboBox uICboLoaiComboBox = this.UIQuảnlýkhoWindow.UICboLoaiWindow.UICboLoaiComboBox;
            WinComboBox uICboSanPhamComboBox = this.UIQuảnlýkhoWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinEdit uITxtSoLuongNhapEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongNhapWindow.UITxtSoLuongNhapEdit;
            WinEdit uITxtNhaCungCapEdit = this.UIQuảnlýkhoWindow.UITxtNhaCungCapWindow.UITxtNhaCungCapEdit;
            WinButton uICậpnhậtButton = this.UIQuảnlýkhoWindow.UICậpnhậtWindow.UICậpnhậtButton;
            WinButton uIOKButton = this.UIThôngbáoWindow.UIOKWindow.UIOKButton;
            #endregion

            // Select 'Sua Tam   ' in 'cboLoai' combo box
            uICboLoaiComboBox.SelectedItem = this.RecordedMethod3Params.UICboLoaiComboBoxSelectedItem;

            // Select 'White conc' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod3Params.UICboSanPhamComboBoxSelectedItem;

            // Type '30' in 'txtSoLuongNhap' text box
            uITxtSoLuongNhapEdit.Text = this.RecordedMethod3Params.UITxtSoLuongNhapEditText;

            // Type 'shjnjk' in 'txtNhaCungCap' text box
            uITxtNhaCungCapEdit.Text = this.RecordedMethod3Params.UITxtNhaCungCapEditText;

            // Click 'Cập nhật' button
            Mouse.Click(uICậpnhậtButton, new Point(58, 30));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(42, 17));

            // Select 'White conc' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod3Params.UICboSanPhamComboBoxSelectedItem1;
        }
        
        /// <summary>
        /// AssertMethod2 - Use 'AssertMethod2ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod2()
        {
            #region Variable Declarations
            WinEdit uITxtSoLuongEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongWindow.UITxtSoLuongEdit;
            #endregion

            // Verify that the 'Text' property of 'txtSoLuong' text box equals '794'
            Assert.AreEqual(this.AssertMethod2ExpectedValues.UITxtSoLuongEditText, uITxtSoLuongEdit.Text);
        }
        
        /// <summary>
        /// AssertMethod3_lan3 - Use 'AssertMethod3_lan3ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod3_lan3()
        {
            #region Variable Declarations
            WinEdit uITxtSoLuongEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongWindow.UITxtSoLuongEdit;
            #endregion

            // Verify that the 'Text' property of 'txtSoLuong' text box equals '372'
            Assert.AreEqual(this.AssertMethod3_lan3ExpectedValues.UITxtSoLuongEditText, uITxtSoLuongEdit.Text);
        }
        
        /// <summary>
        /// RecordedMethod_lancuoi - Use 'RecordedMethod_lancuoiParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_lancuoi()
        {
            #region Variable Declarations
            WinComboBox uICboLoaiComboBox = this.UIQuảnlýkhoWindow.UICboLoaiWindow.UICboLoaiComboBox;
            WinComboBox uICboSanPhamComboBox = this.UIQuảnlýkhoWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinEdit uITxtSoLuongNhapEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongNhapWindow.UITxtSoLuongNhapEdit;
            WinEdit uITxtNhaCungCapEdit = this.UIQuảnlýkhoWindow.UITxtNhaCungCapWindow.UITxtNhaCungCapEdit;
            WinButton uICậpnhậtButton = this.UIQuảnlýkhoWindow.UICậpnhậtWindow.UICậpnhậtButton;
            WinButton uIOKButton = this.UIThôngbáoWindow.UIOKWindow.UIOKButton;
            #endregion

            // Select 'Sua Tam   ' in 'cboLoai' combo box
            uICboLoaiComboBox.SelectedItem = this.RecordedMethod_lancuoiParams.UICboLoaiComboBoxSelectedItem;

            // Select '2' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod_lancuoiParams.UICboSanPhamComboBoxSelectedItem;

            // Type '18' in 'txtSoLuongNhap' text box
            uITxtSoLuongNhapEdit.Text = this.RecordedMethod_lancuoiParams.UITxtSoLuongNhapEditText;

            // Type 'haha' in 'txtNhaCungCap' text box
            uITxtNhaCungCapEdit.Text = this.RecordedMethod_lancuoiParams.UITxtNhaCungCapEditText;

            // Click 'Cập nhật' button
            Mouse.Click(uICậpnhậtButton, new Point(70, 24));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(26, 16));

            // Select '2' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod_lancuoiParams.UICboSanPhamComboBoxSelectedItem1;
        }
        
        /// <summary>
        /// Assert_lancuoi - Use 'Assert_lancuoiExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Assert_lancuoi()
        {
            #region Variable Declarations
            WinEdit uITxtSoLuongEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongWindow.UITxtSoLuongEdit;
            #endregion

            // Verify that the 'Text' property of 'txtSoLuong' text box equals '390'
            Assert.AreEqual(this.Assert_lancuoiExpectedValues.UITxtSoLuongEditText, uITxtSoLuongEdit.Text);
        }
        
        /// <summary>
        /// RecordedMethod4 - Use 'RecordedMethod4Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod4()
        {
            #region Variable Declarations
            WinComboBox uICboLoaiComboBox = this.UIQuảnlýkhoWindow.UICboLoaiWindow.UICboLoaiComboBox;
            WinComboBox uICboSanPhamComboBox = this.UIQuảnlýkhoWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinEdit uITxtSoLuongNhapEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongNhapWindow.UITxtSoLuongNhapEdit;
            WinEdit uITxtNhaCungCapEdit = this.UIQuảnlýkhoWindow.UITxtNhaCungCapWindow.UITxtNhaCungCapEdit;
            WinButton uICậpnhậtButton = this.UIQuảnlýkhoWindow.UICậpnhậtWindow.UICậpnhậtButton;
            WinButton uIOKButton = this.UIThôngbáoWindow.UIOKWindow.UIOKButton;
            WinClient uIQuảnlýkhoClient = this.UIQuảnlýkhoWindow.UIQuảnlýkhoClient;
            #endregion

            // Select 'Sua Tam   ' in 'cboLoai' combo box
            uICboLoaiComboBox.SelectedItem = this.RecordedMethod4Params.UICboLoaiComboBoxSelectedItem;

            // Select '2' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod4Params.UICboSanPhamComboBoxSelectedItem;

            // Type '30' in 'txtSoLuongNhap' text box
            uITxtSoLuongNhapEdit.Text = this.RecordedMethod4Params.UITxtSoLuongNhapEditText;

            // Type 'hah' in 'txtNhaCungCap' text box
            uITxtNhaCungCapEdit.Text = this.RecordedMethod4Params.UITxtNhaCungCapEditText;

            // Click 'Cập nhật' button
            Mouse.Click(uICậpnhậtButton, new Point(83, 37));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(36, 13));

            // Click 'Quản lý kho' client
            Mouse.Click(uIQuảnlýkhoClient, new Point(608, 481));
        }
        
        /// <summary>
        /// AssertMethod4 - Use 'AssertMethod4ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod4()
        {
            #region Variable Declarations
            WinEdit uITxtSoLuongEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongWindow.UITxtSoLuongEdit;
            #endregion

            // Verify that the 'Text' property of 'txtSoLuong' text box equals '426'
            Assert.AreEqual(this.AssertMethod4ExpectedValues.UITxtSoLuongEditText, uITxtSoLuongEdit.Text);
        }
        
        /// <summary>
        /// RecordedMethod5 - Use 'RecordedMethod5Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod5()
        {
            #region Variable Declarations
            WinComboBox uICboLoaiComboBox = this.UIQuảnlýkhoWindow.UICboLoaiWindow.UICboLoaiComboBox;
            WinComboBox uICboSanPhamComboBox = this.UIQuảnlýkhoWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinEdit uITxtSoLuongNhapEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongNhapWindow.UITxtSoLuongNhapEdit;
            WinEdit uITxtNhaCungCapEdit = this.UIQuảnlýkhoWindow.UITxtNhaCungCapWindow.UITxtNhaCungCapEdit;
            WinButton uICậpnhậtButton = this.UIQuảnlýkhoWindow.UICậpnhậtWindow.UICậpnhậtButton;
            WinButton uIOKButton = this.UIThôngbáoWindow.UIOKWindow.UIOKButton;
            #endregion

            // Select 'Sua Tam   ' in 'cboLoai' combo box
            uICboLoaiComboBox.SelectedItem = this.RecordedMethod5Params.UICboLoaiComboBoxSelectedItem;

            // Select '2' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod5Params.UICboSanPhamComboBoxSelectedItem;

            // Type '23' in 'txtSoLuongNhap' text box
            uITxtSoLuongNhapEdit.Text = this.RecordedMethod5Params.UITxtSoLuongNhapEditText;

            // Type 'haha' in 'txtNhaCungCap' text box
            uITxtNhaCungCapEdit.Text = this.RecordedMethod5Params.UITxtNhaCungCapEditText;

            // Click 'Cập nhật' button
            Mouse.Click(uICậpnhậtButton, new Point(110, 43));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(44, 10));

            // Select '2' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedMethod5Params.UICboSanPhamComboBoxSelectedItem1;
        }
        
        /// <summary>
        /// AssertMethod5 - Use 'AssertMethod5ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod5()
        {
            #region Variable Declarations
            WinEdit uITxtSoLuongEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongWindow.UITxtSoLuongEdit;
            #endregion

            // Verify that the 'Text' property of 'txtSoLuong' text box equals '491'
            Assert.AreEqual(this.AssertMethod5ExpectedValues.UITxtSoLuongEditText, uITxtSoLuongEdit.Text);
        }
        
        /// <summary>
        /// RecordedNhapSo1 - Use 'RecordedNhapSo1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedNhapSo1()
        {
            #region Variable Declarations
            WinComboBox uICboLoaiComboBox = this.UIQuảnlýkhoWindow.UICboLoaiWindow.UICboLoaiComboBox;
            WinComboBox uICboSanPhamComboBox = this.UIQuảnlýkhoWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinEdit uITxtNhaCungCapEdit = this.UIQuảnlýkhoWindow.UITxtNhaCungCapWindow.UITxtNhaCungCapEdit;
            WinEdit uITxtSoLuongNhapEdit = this.UIQuảnlýkhoWindow.UITxtSoLuongNhapWindow.UITxtSoLuongNhapEdit;
            WinButton uICậpnhậtButton = this.UIQuảnlýkhoWindow.UICậpnhậtWindow.UICậpnhậtButton;
            #endregion

            // Select 'Son       ' in 'cboLoai' combo box
            uICboLoaiComboBox.SelectedItem = this.RecordedNhapSo1Params.UICboLoaiComboBoxSelectedItem;

            // Select '5' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedNhapSo1Params.UICboSanPhamComboBoxSelectedItem;

            // Type 'dat' in 'txtNhaCungCap' text box
            uITxtNhaCungCapEdit.Text = this.RecordedNhapSo1Params.UITxtNhaCungCapEditText;

            // Type 'hi' in 'txtSoLuongNhap' text box
            uITxtSoLuongNhapEdit.Text = this.RecordedNhapSo1Params.UITxtSoLuongNhapEditText;

            // Click 'Cập nhật' button
            Mouse.Click(uICậpnhậtButton, new Point(81, 61));
        }
        
        /// <summary>
        /// AssertNhapSo1 - Use 'AssertNhapSo1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertNhapSo1()
        {
            #region Variable Declarations
            WinText uIChiduocnhapsoText = this.UIThongbaoWindow.UIChiduocnhapsoWindow.UIChiduocnhapsoText;
            #endregion

            // Verify that the 'FriendlyName' property of 'Chi duoc nhap so' label equals 'Chi duoc nhap so'
            Assert.AreEqual(this.AssertNhapSo1ExpectedValues.UIChiduocnhapsoTextFriendlyName, uIChiduocnhapsoText.FriendlyName);
        }
        
        /// <summary>
        /// RecordedBoTrong - Use 'RecordedBoTrongParams' to pass parameters into this method.
        /// </summary>
        public void RecordedBoTrong()
        {
            #region Variable Declarations
            WinComboBox uICboLoaiComboBox = this.UIQuảnlýkhoWindow.UICboLoaiWindow.UICboLoaiComboBox;
            WinComboBox uICboSanPhamComboBox = this.UIQuảnlýkhoWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinButton uICậpnhậtButton = this.UIQuảnlýkhoWindow.UICậpnhậtWindow.UICậpnhậtButton;
            #endregion

            // Select 'Son       ' in 'cboLoai' combo box
            uICboLoaiComboBox.SelectedItem = this.RecordedBoTrongParams.UICboLoaiComboBoxSelectedItem;

            // Select '5' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.RecordedBoTrongParams.UICboSanPhamComboBoxSelectedItem;

            // Click 'Cập nhật' button
            Mouse.Click(uICậpnhậtButton, new Point(56, 47));
        }
        
        /// <summary>
        /// AssertBoTrong - Use 'AssertBoTrongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertBoTrong()
        {
            #region Variable Declarations
            WinText uIKhongduocbotrongText = this.UIThongbaoWindow.UIChiduocnhapsoWindow.UIKhongduocbotrongText;
            #endregion

            // Verify that the 'FriendlyName' property of 'Khong duoc bo trong' label equals 'Khong duoc bo trong'
            Assert.AreEqual(this.AssertBoTrongExpectedValues.UIKhongduocbotrongTextFriendlyName, uIKhongduocbotrongText.FriendlyName);
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual RecordedMethod2Params RecordedMethod2Params
        {
            get
            {
                if ((this.mRecordedMethod2Params == null))
                {
                    this.mRecordedMethod2Params = new RecordedMethod2Params();
                }
                return this.mRecordedMethod2Params;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual RecordedMethod3Params RecordedMethod3Params
        {
            get
            {
                if ((this.mRecordedMethod3Params == null))
                {
                    this.mRecordedMethod3Params = new RecordedMethod3Params();
                }
                return this.mRecordedMethod3Params;
            }
        }
        
        public virtual AssertMethod2ExpectedValues AssertMethod2ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod2ExpectedValues == null))
                {
                    this.mAssertMethod2ExpectedValues = new AssertMethod2ExpectedValues();
                }
                return this.mAssertMethod2ExpectedValues;
            }
        }
        
        public virtual AssertMethod3_lan3ExpectedValues AssertMethod3_lan3ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod3_lan3ExpectedValues == null))
                {
                    this.mAssertMethod3_lan3ExpectedValues = new AssertMethod3_lan3ExpectedValues();
                }
                return this.mAssertMethod3_lan3ExpectedValues;
            }
        }
        
        public virtual RecordedMethod_lancuoiParams RecordedMethod_lancuoiParams
        {
            get
            {
                if ((this.mRecordedMethod_lancuoiParams == null))
                {
                    this.mRecordedMethod_lancuoiParams = new RecordedMethod_lancuoiParams();
                }
                return this.mRecordedMethod_lancuoiParams;
            }
        }
        
        public virtual Assert_lancuoiExpectedValues Assert_lancuoiExpectedValues
        {
            get
            {
                if ((this.mAssert_lancuoiExpectedValues == null))
                {
                    this.mAssert_lancuoiExpectedValues = new Assert_lancuoiExpectedValues();
                }
                return this.mAssert_lancuoiExpectedValues;
            }
        }
        
        public virtual RecordedMethod4Params RecordedMethod4Params
        {
            get
            {
                if ((this.mRecordedMethod4Params == null))
                {
                    this.mRecordedMethod4Params = new RecordedMethod4Params();
                }
                return this.mRecordedMethod4Params;
            }
        }
        
        public virtual AssertMethod4ExpectedValues AssertMethod4ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod4ExpectedValues == null))
                {
                    this.mAssertMethod4ExpectedValues = new AssertMethod4ExpectedValues();
                }
                return this.mAssertMethod4ExpectedValues;
            }
        }
        
        public virtual RecordedMethod5Params RecordedMethod5Params
        {
            get
            {
                if ((this.mRecordedMethod5Params == null))
                {
                    this.mRecordedMethod5Params = new RecordedMethod5Params();
                }
                return this.mRecordedMethod5Params;
            }
        }
        
        public virtual AssertMethod5ExpectedValues AssertMethod5ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod5ExpectedValues == null))
                {
                    this.mAssertMethod5ExpectedValues = new AssertMethod5ExpectedValues();
                }
                return this.mAssertMethod5ExpectedValues;
            }
        }
        
        public virtual RecordedNhapSo1Params RecordedNhapSo1Params
        {
            get
            {
                if ((this.mRecordedNhapSo1Params == null))
                {
                    this.mRecordedNhapSo1Params = new RecordedNhapSo1Params();
                }
                return this.mRecordedNhapSo1Params;
            }
        }
        
        public virtual AssertNhapSo1ExpectedValues AssertNhapSo1ExpectedValues
        {
            get
            {
                if ((this.mAssertNhapSo1ExpectedValues == null))
                {
                    this.mAssertNhapSo1ExpectedValues = new AssertNhapSo1ExpectedValues();
                }
                return this.mAssertNhapSo1ExpectedValues;
            }
        }
        
        public virtual RecordedBoTrongParams RecordedBoTrongParams
        {
            get
            {
                if ((this.mRecordedBoTrongParams == null))
                {
                    this.mRecordedBoTrongParams = new RecordedBoTrongParams();
                }
                return this.mRecordedBoTrongParams;
            }
        }
        
        public virtual AssertBoTrongExpectedValues AssertBoTrongExpectedValues
        {
            get
            {
                if ((this.mAssertBoTrongExpectedValues == null))
                {
                    this.mAssertBoTrongExpectedValues = new AssertBoTrongExpectedValues();
                }
                return this.mAssertBoTrongExpectedValues;
            }
        }
        
        public UIQuảnlýkhoWindow UIQuảnlýkhoWindow
        {
            get
            {
                if ((this.mUIQuảnlýkhoWindow == null))
                {
                    this.mUIQuảnlýkhoWindow = new UIQuảnlýkhoWindow();
                }
                return this.mUIQuảnlýkhoWindow;
            }
        }
        
        public UIThôngbáoWindow UIThôngbáoWindow
        {
            get
            {
                if ((this.mUIThôngbáoWindow == null))
                {
                    this.mUIThôngbáoWindow = new UIThôngbáoWindow();
                }
                return this.mUIThôngbáoWindow;
            }
        }
        
        public UIThongbaoWindow UIThongbaoWindow
        {
            get
            {
                if ((this.mUIThongbaoWindow == null))
                {
                    this.mUIThongbaoWindow = new UIThongbaoWindow();
                }
                return this.mUIThongbaoWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private RecordedMethod2Params mRecordedMethod2Params;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private RecordedMethod3Params mRecordedMethod3Params;
        
        private AssertMethod2ExpectedValues mAssertMethod2ExpectedValues;
        
        private AssertMethod3_lan3ExpectedValues mAssertMethod3_lan3ExpectedValues;
        
        private RecordedMethod_lancuoiParams mRecordedMethod_lancuoiParams;
        
        private Assert_lancuoiExpectedValues mAssert_lancuoiExpectedValues;
        
        private RecordedMethod4Params mRecordedMethod4Params;
        
        private AssertMethod4ExpectedValues mAssertMethod4ExpectedValues;
        
        private RecordedMethod5Params mRecordedMethod5Params;
        
        private AssertMethod5ExpectedValues mAssertMethod5ExpectedValues;
        
        private RecordedNhapSo1Params mRecordedNhapSo1Params;
        
        private AssertNhapSo1ExpectedValues mAssertNhapSo1ExpectedValues;
        
        private RecordedBoTrongParams mRecordedBoTrongParams;
        
        private AssertBoTrongExpectedValues mAssertBoTrongExpectedValues;
        
        private UIQuảnlýkhoWindow mUIQuảnlýkhoWindow;
        
        private UIThôngbáoWindow mUIThôngbáoWindow;
        
        private UIThongbaoWindow mUIThongbaoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Son       ' in 'cboLoai' combo box
        /// </summary>
        public string UICboLoaiComboBoxSelectedItem = "Son       ";
        
        /// <summary>
        /// Select 'Son môi Mamonde Creamy Tint Color Balm Intense' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "Son môi Mamonde Creamy Tint Color Balm Intense";
        
        /// <summary>
        /// Select 'Son       ' in 'cboLoai' combo box
        /// </summary>
        public string UICboLoaiComboBoxSelectedItem1 = "Son       ";
        
        /// <summary>
        /// Select 'Son môi Mamonde Creamy Tint Color Balm Intense' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem1 = "Son môi Mamonde Creamy Tint Color Balm Intense";
        
        /// <summary>
        /// Type '30' in 'txtSoLuongNhap' text box
        /// </summary>
        public string UITxtSoLuongNhapEditText = "30";
        
        /// <summary>
        /// Type 'dat' in 'txtNhaCungCap' text box
        /// </summary>
        public string UITxtNhaCungCapEditText = "dat";
        
        /// <summary>
        /// Select 'Son môi Mamonde Creamy Tint Color Balm Intense' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem2 = "Son môi Mamonde Creamy Tint Color Balm Intense";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod2Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Sua Tam   ' in 'cboLoai' combo box
        /// </summary>
        public string UICboLoaiComboBoxSelectedItem = "Sua Tam   ";
        
        /// <summary>
        /// Select 'White conc' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "White conc";
        
        /// <summary>
        /// Type '4' in 'txtSoLuongNhap' text box
        /// </summary>
        public string UITxtSoLuongNhapEditText = "4";
        
        /// <summary>
        /// Type 'dat' in 'txtNhaCungCap' text box
        /// </summary>
        public string UITxtNhaCungCapEditText = "dat";
        
        /// <summary>
        /// Select 'White conc' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem1 = "White conc";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of '760' cell equals '760'
        /// </summary>
        public string UIItem760CellFriendlyName = "760";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod3Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Sua Tam   ' in 'cboLoai' combo box
        /// </summary>
        public string UICboLoaiComboBoxSelectedItem = "Sua Tam   ";
        
        /// <summary>
        /// Select 'White conc' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "White conc";
        
        /// <summary>
        /// Type '30' in 'txtSoLuongNhap' text box
        /// </summary>
        public string UITxtSoLuongNhapEditText = "30";
        
        /// <summary>
        /// Type 'shjnjk' in 'txtNhaCungCap' text box
        /// </summary>
        public string UITxtNhaCungCapEditText = "shjnjk";
        
        /// <summary>
        /// Select 'White conc' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem1 = "White conc";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod2ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtSoLuong' text box equals '794'
        /// </summary>
        public string UITxtSoLuongEditText = "794";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod3_lan3'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod3_lan3ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtSoLuong' text box equals '372'
        /// </summary>
        public string UITxtSoLuongEditText = "372";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_lancuoi'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod_lancuoiParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Sua Tam   ' in 'cboLoai' combo box
        /// </summary>
        public string UICboLoaiComboBoxSelectedItem = "Sua Tam   ";
        
        /// <summary>
        /// Select '2' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "2";
        
        /// <summary>
        /// Type '18' in 'txtSoLuongNhap' text box
        /// </summary>
        public string UITxtSoLuongNhapEditText = "18";
        
        /// <summary>
        /// Type 'haha' in 'txtNhaCungCap' text box
        /// </summary>
        public string UITxtNhaCungCapEditText = "haha";
        
        /// <summary>
        /// Select '2' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem1 = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert_lancuoi'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class Assert_lancuoiExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtSoLuong' text box equals '390'
        /// </summary>
        public string UITxtSoLuongEditText = "390";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod4Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Sua Tam   ' in 'cboLoai' combo box
        /// </summary>
        public string UICboLoaiComboBoxSelectedItem = "Sua Tam   ";
        
        /// <summary>
        /// Select '2' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "2";
        
        /// <summary>
        /// Type '30' in 'txtSoLuongNhap' text box
        /// </summary>
        public string UITxtSoLuongNhapEditText = "30";
        
        /// <summary>
        /// Type 'hah' in 'txtNhaCungCap' text box
        /// </summary>
        public string UITxtNhaCungCapEditText = "hah";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod4'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod4ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtSoLuong' text box equals '426'
        /// </summary>
        public string UITxtSoLuongEditText = "426";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedMethod5Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Sua Tam   ' in 'cboLoai' combo box
        /// </summary>
        public string UICboLoaiComboBoxSelectedItem = "Sua Tam   ";
        
        /// <summary>
        /// Select '2' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "2";
        
        /// <summary>
        /// Type '23' in 'txtSoLuongNhap' text box
        /// </summary>
        public string UITxtSoLuongNhapEditText = "23";
        
        /// <summary>
        /// Type 'haha' in 'txtNhaCungCap' text box
        /// </summary>
        public string UITxtNhaCungCapEditText = "haha";
        
        /// <summary>
        /// Select '2' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem1 = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod5'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertMethod5ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Text' property of 'txtSoLuong' text box equals '491'
        /// </summary>
        public string UITxtSoLuongEditText = "491";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedNhapSo1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedNhapSo1Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'Son       ' in 'cboLoai' combo box
        /// </summary>
        public string UICboLoaiComboBoxSelectedItem = "Son       ";
        
        /// <summary>
        /// Select '5' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "5";
        
        /// <summary>
        /// Type 'dat' in 'txtNhaCungCap' text box
        /// </summary>
        public string UITxtNhaCungCapEditText = "dat";
        
        /// <summary>
        /// Type 'hi' in 'txtSoLuongNhap' text box
        /// </summary>
        public string UITxtSoLuongNhapEditText = "hi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertNhapSo1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertNhapSo1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Chi duoc nhap so' label equals 'Chi duoc nhap so'
        /// </summary>
        public string UIChiduocnhapsoTextFriendlyName = "Chi duoc nhap so";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedBoTrong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class RecordedBoTrongParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Son       ' in 'cboLoai' combo box
        /// </summary>
        public string UICboLoaiComboBoxSelectedItem = "Son       ";
        
        /// <summary>
        /// Select '5' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "5";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertBoTrong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class AssertBoTrongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Khong duoc bo trong' label equals 'Khong duoc bo trong'
        /// </summary>
        public string UIKhongduocbotrongTextFriendlyName = "Khong duoc bo trong";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIQuảnlýkhoWindow : WinWindow
    {
        
        public UIQuảnlýkhoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Quản lý kho";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Quản lý kho");
            #endregion
        }
        
        #region Properties
        public UICboLoaiWindow UICboLoaiWindow
        {
            get
            {
                if ((this.mUICboLoaiWindow == null))
                {
                    this.mUICboLoaiWindow = new UICboLoaiWindow(this);
                }
                return this.mUICboLoaiWindow;
            }
        }
        
        public UICboSanPhamWindow UICboSanPhamWindow
        {
            get
            {
                if ((this.mUICboSanPhamWindow == null))
                {
                    this.mUICboSanPhamWindow = new UICboSanPhamWindow(this);
                }
                return this.mUICboSanPhamWindow;
            }
        }
        
        public UITxtSoLuongNhapWindow UITxtSoLuongNhapWindow
        {
            get
            {
                if ((this.mUITxtSoLuongNhapWindow == null))
                {
                    this.mUITxtSoLuongNhapWindow = new UITxtSoLuongNhapWindow(this);
                }
                return this.mUITxtSoLuongNhapWindow;
            }
        }
        
        public UITxtNhaCungCapWindow UITxtNhaCungCapWindow
        {
            get
            {
                if ((this.mUITxtNhaCungCapWindow == null))
                {
                    this.mUITxtNhaCungCapWindow = new UITxtNhaCungCapWindow(this);
                }
                return this.mUITxtNhaCungCapWindow;
            }
        }
        
        public UICậpnhậtWindow UICậpnhậtWindow
        {
            get
            {
                if ((this.mUICậpnhậtWindow == null))
                {
                    this.mUICậpnhậtWindow = new UICậpnhậtWindow(this);
                }
                return this.mUICậpnhậtWindow;
            }
        }
        
        public UITxtSoLuongWindow UITxtSoLuongWindow
        {
            get
            {
                if ((this.mUITxtSoLuongWindow == null))
                {
                    this.mUITxtSoLuongWindow = new UITxtSoLuongWindow(this);
                }
                return this.mUITxtSoLuongWindow;
            }
        }
        
        public UIDtgKhoWindow UIDtgKhoWindow
        {
            get
            {
                if ((this.mUIDtgKhoWindow == null))
                {
                    this.mUIDtgKhoWindow = new UIDtgKhoWindow(this);
                }
                return this.mUIDtgKhoWindow;
            }
        }
        
        public WinClient UIQuảnlýkhoClient
        {
            get
            {
                if ((this.mUIQuảnlýkhoClient == null))
                {
                    this.mUIQuảnlýkhoClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIQuảnlýkhoClient.SearchProperties[WinControl.PropertyNames.Name] = "Quản lý kho";
                    this.mUIQuảnlýkhoClient.WindowTitles.Add("Quản lý kho");
                    #endregion
                }
                return this.mUIQuảnlýkhoClient;
            }
        }
        #endregion
        
        #region Fields
        private UICboLoaiWindow mUICboLoaiWindow;
        
        private UICboSanPhamWindow mUICboSanPhamWindow;
        
        private UITxtSoLuongNhapWindow mUITxtSoLuongNhapWindow;
        
        private UITxtNhaCungCapWindow mUITxtNhaCungCapWindow;
        
        private UICậpnhậtWindow mUICậpnhậtWindow;
        
        private UITxtSoLuongWindow mUITxtSoLuongWindow;
        
        private UIDtgKhoWindow mUIDtgKhoWindow;
        
        private WinClient mUIQuảnlýkhoClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICboLoaiWindow : WinWindow
    {
        
        public UICboLoaiWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboLoai";
            this.WindowTitles.Add("Quản lý kho");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICboLoaiComboBox
        {
            get
            {
                if ((this.mUICboLoaiComboBox == null))
                {
                    this.mUICboLoaiComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUICboLoaiComboBox.WindowTitles.Add("Quản lý kho");
                    #endregion
                }
                return this.mUICboLoaiComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICboLoaiComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICboSanPhamWindow : WinWindow
    {
        
        public UICboSanPhamWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboSanPham";
            this.WindowTitles.Add("Quản lý kho");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICboSanPhamComboBox
        {
            get
            {
                if ((this.mUICboSanPhamComboBox == null))
                {
                    this.mUICboSanPhamComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUICboSanPhamComboBox.WindowTitles.Add("Quản lý kho");
                    #endregion
                }
                return this.mUICboSanPhamComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICboSanPhamComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtSoLuongNhapWindow : WinWindow
    {
        
        public UITxtSoLuongNhapWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSoLuongNhap";
            this.WindowTitles.Add("Quản lý kho");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtSoLuongNhapEdit
        {
            get
            {
                if ((this.mUITxtSoLuongNhapEdit == null))
                {
                    this.mUITxtSoLuongNhapEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtSoLuongNhapEdit.WindowTitles.Add("Quản lý kho");
                    #endregion
                }
                return this.mUITxtSoLuongNhapEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtSoLuongNhapEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtNhaCungCapWindow : WinWindow
    {
        
        public UITxtNhaCungCapWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtNhaCungCap";
            this.WindowTitles.Add("Quản lý kho");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtNhaCungCapEdit
        {
            get
            {
                if ((this.mUITxtNhaCungCapEdit == null))
                {
                    this.mUITxtNhaCungCapEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtNhaCungCapEdit.WindowTitles.Add("Quản lý kho");
                    #endregion
                }
                return this.mUITxtNhaCungCapEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtNhaCungCapEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UICậpnhậtWindow : WinWindow
    {
        
        public UICậpnhậtWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnCapNhat";
            this.WindowTitles.Add("Quản lý kho");
            #endregion
        }
        
        #region Properties
        public WinButton UICậpnhậtButton
        {
            get
            {
                if ((this.mUICậpnhậtButton == null))
                {
                    this.mUICậpnhậtButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICậpnhậtButton.SearchProperties[WinButton.PropertyNames.Name] = "Cập nhật";
                    this.mUICậpnhậtButton.WindowTitles.Add("Quản lý kho");
                    #endregion
                }
                return this.mUICậpnhậtButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICậpnhậtButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UITxtSoLuongWindow : WinWindow
    {
        
        public UITxtSoLuongWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtSoLuong";
            this.WindowTitles.Add("Quản lý kho");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtSoLuongEdit
        {
            get
            {
                if ((this.mUITxtSoLuongEdit == null))
                {
                    this.mUITxtSoLuongEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtSoLuongEdit.WindowTitles.Add("Quản lý kho");
                    #endregion
                }
                return this.mUITxtSoLuongEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtSoLuongEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDtgKhoWindow : WinWindow
    {
        
        public UIDtgKhoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dtgKho";
            this.WindowTitles.Add("Quản lý kho");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("Quản lý kho");
            #endregion
        }
        
        #region Properties
        public UIRow3Row UIRow3Row
        {
            get
            {
                if ((this.mUIRow3Row == null))
                {
                    this.mUIRow3Row = new UIRow3Row(this);
                }
                return this.mUIRow3Row;
            }
        }
        #endregion
        
        #region Fields
        private UIRow3Row mUIRow3Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIRow3Row : WinRow
    {
        
        public UIRow3Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinRow.PropertyNames.Value, ";760", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("Quản lý kho");
            #endregion
        }
        
        #region Properties
        public WinCell UIItem760Cell
        {
            get
            {
                if ((this.mUIItem760Cell == null))
                {
                    this.mUIItem760Cell = new WinCell(this);
                    #region Search Criteria
                    this.mUIItem760Cell.SearchProperties[WinCell.PropertyNames.Value] = "760";
                    this.mUIItem760Cell.WindowTitles.Add("Quản lý kho");
                    #endregion
                }
                return this.mUIItem760Cell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIItem760Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIThôngbáoWindow : WinWindow
    {
        
        public UIThôngbáoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thông báo";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Thông báo");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Thông báo");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Thông báo");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIThongbaoWindow : WinWindow
    {
        
        public UIThongbaoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thong bao";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Thong bao");
            #endregion
        }
        
        #region Properties
        public UIChiduocnhapsoWindow UIChiduocnhapsoWindow
        {
            get
            {
                if ((this.mUIChiduocnhapsoWindow == null))
                {
                    this.mUIChiduocnhapsoWindow = new UIChiduocnhapsoWindow(this);
                }
                return this.mUIChiduocnhapsoWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIChiduocnhapsoWindow mUIChiduocnhapsoWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.50727.1")]
    public class UIChiduocnhapsoWindow : WinWindow
    {
        
        public UIChiduocnhapsoWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Thong bao");
            #endregion
        }
        
        #region Properties
        public WinText UIChiduocnhapsoText
        {
            get
            {
                if ((this.mUIChiduocnhapsoText == null))
                {
                    this.mUIChiduocnhapsoText = new WinText(this);
                    #region Search Criteria
                    this.mUIChiduocnhapsoText.SearchProperties[WinText.PropertyNames.Name] = "Chi duoc nhap so";
                    this.mUIChiduocnhapsoText.WindowTitles.Add("Thong bao");
                    #endregion
                }
                return this.mUIChiduocnhapsoText;
            }
        }
        
        public WinText UIKhongduocbotrongText
        {
            get
            {
                if ((this.mUIKhongduocbotrongText == null))
                {
                    this.mUIKhongduocbotrongText = new WinText(this);
                    #region Search Criteria
                    this.mUIKhongduocbotrongText.SearchProperties[WinText.PropertyNames.Name] = "Khong duoc bo trong";
                    this.mUIKhongduocbotrongText.WindowTitles.Add("Thong bao");
                    #endregion
                }
                return this.mUIKhongduocbotrongText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIChiduocnhapsoText;
        
        private WinText mUIKhongduocbotrongText;
        #endregion
    }
}
