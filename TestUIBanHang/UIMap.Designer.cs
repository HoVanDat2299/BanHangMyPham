// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestUIBanHang
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// BanHangTest - Use 'BanHangTestParams' to pass parameters into this method.
        /// </summary>
        public void BanHangTest()
        {
            #region Variable Declarations
            WinEdit uITxtTaiKhoanEdit = this.UIFrmDangNhapWindow.UIUsernameWindow.UITxtTaiKhoanEdit;
            WinClient uIFrmDangNhapClient = this.UIFrmDangNhapWindow.UIFrmDangNhapClient;
            WinEdit uITxtMatKhauEdit = this.UIFrmDangNhapWindow.UIPasswordWindow.UITxtMatKhauEdit;
            WinButton uIĐăngnhậpButton = this.UIFrmDangNhapWindow.UIĐăngnhậpWindow.UIĐăngnhậpButton;
            WinButton uIBánHàngButton = this.UIBánHàngWindow.UIBánHàngButton;
            WinComboBox uICboSanPhamComboBox = this.UIBánhàngWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinComboBox uICbSoLuongComboBox = this.UIBánhàngWindow.UICbSoLuongWindow.UICbSoLuongComboBox;
            WinButton uITHÊMVÀOGIỎButton = this.UIBánhàngWindow.UITHÊMVÀOGIỎWindow.UITHÊMVÀOGIỎButton;
            WinComboBox uICbKhachHangComboBox = this.UIBánhàngWindow.UICbKhachHangWindow.UICbKhachHangComboBox;
            WinButton uITẠMTÍNHButton = this.UIBánhàngWindow.UITẠMTÍNHWindow.UITẠMTÍNHButton;
            WinEdit uITxtKhachThanhToanEdit = this.UIBánhàngWindow.UIItem0Window.UITxtKhachThanhToanEdit;
            WinButton uIKháchĐưaĐủButton = this.UIFrm_ChonTienWindow.UIKháchĐưaĐủWindow.UIKháchĐưaĐủButton;
            #endregion

            // Type 'QL003' in 'txtTaiKhoan' text box
            uITxtTaiKhoanEdit.Text = this.BanHangTestParams.UITxtTaiKhoanEditText;

            // Click 'frmDangNhap' client
            Mouse.Click(uIFrmDangNhapClient, new Point(153, 287));

            // Click 'txtMatKhau' text box
            Mouse.Click(uITxtMatKhauEdit, new Point(47, 14));

            // Type '{NumPad1}{NumPad2}{NumPad3}' in 'txtMatKhau' text box
            Keyboard.SendKeys(uITxtMatKhauEdit, this.BanHangTestParams.UITxtMatKhauEditSendKeys, ModifierKeys.None);

            // Click 'Đăng nhập' button
            Mouse.Click(uIĐăngnhậpButton, new Point(96, 14));

            // Click 'Bán Hàng' button
            Mouse.Click(uIBánHàngButton, new Point(103, 32));

            // Select 'White conc' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.BanHangTestParams.UICboSanPhamComboBoxSelectedItem;

            // Select '2' in 'cbSoLuong' combo box
            uICbSoLuongComboBox.SelectedItem = this.BanHangTestParams.UICbSoLuongComboBoxSelectedItem;

            // Click 'THÊM VÀO GIỎ' button
            Mouse.Click(uITHÊMVÀOGIỎButton, new Point(146, 21));

            // Select 'Lê Vĩnh Khiêm' in 'cbKhachHang' combo box
            uICbKhachHangComboBox.SelectedItem = this.BanHangTestParams.UICbKhachHangComboBoxSelectedItem;

            // Click 'TẠM TÍNH' button
            Mouse.Click(uITẠMTÍNHButton, new Point(19, 17));

            // Click 'txtKhachThanhToan' text box
            Mouse.Click(uITxtKhachThanhToanEdit, new Point(39, 6));

            // Click 'Khách Đưa Đủ' button
            Mouse.Click(uIKháchĐưaĐủButton, new Point(229, 24));

            // Click 'TẠM TÍNH' button
            Mouse.Click(uITẠMTÍNHButton, new Point(68, 30));
        }
        
        /// <summary>
        /// TestLan2 - Use 'TestLan2Params' to pass parameters into this method.
        /// </summary>
        public void TestLan2()
        {
            #region Variable Declarations
            WinComboBox uICboSanPhamComboBox = this.UIBánhàngWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinComboBox uICbSoLuongComboBox = this.UIBánhàngWindow.UICbSoLuongWindow.UICbSoLuongComboBox;
            WinButton uITHÊMVÀOGIỎButton = this.UIBánhàngWindow.UITHÊMVÀOGIỎWindow.UITHÊMVÀOGIỎButton;
            WinComboBox uICbKhachHangComboBox = this.UIBánhàngWindow.UICbKhachHangWindow.UICbKhachHangComboBox;
            WinButton uITẠMTÍNHButton = this.UIBánhàngWindow.UITẠMTÍNHWindow.UITẠMTÍNHButton;
            WinEdit uITxtKhachThanhToanEdit = this.UIBánhàngWindow.UIItem0Window.UITxtKhachThanhToanEdit;
            WinButton uIKháchĐưaĐủButton = this.UIFrm_ChonTienWindow.UIKháchĐưaĐủWindow.UIKháchĐưaĐủButton;
            WinButton uITẠOHÓAĐƠNXUẤTBILLButton = this.UIBánhàngWindow.UITẠOHÓAĐƠNXUẤTBILLWindow.UITẠOHÓAĐƠNXUẤTBILLButton;
            WinButton uICloseButton = this.UIFrm_HoaDonWindow.UIFrm_HoaDonTitleBar.UICloseButton;
            #endregion

            // Select 'White conc' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.TestLan2Params.UICboSanPhamComboBoxSelectedItem;

            // Select '3' in 'cbSoLuong' combo box
            uICbSoLuongComboBox.SelectedItem = this.TestLan2Params.UICbSoLuongComboBoxSelectedItem;

            // Click 'THÊM VÀO GIỎ' button
            Mouse.Click(uITHÊMVÀOGIỎButton, new Point(112, 30));

            // Select 'Nguyễn Quang Huy' in 'cbKhachHang' combo box
            uICbKhachHangComboBox.SelectedItem = this.TestLan2Params.UICbKhachHangComboBoxSelectedItem;

            // Click 'TẠM TÍNH' button
            Mouse.Click(uITẠMTÍNHButton, new Point(47, 7));

            // Click 'txtKhachThanhToan' text box
            Mouse.Click(uITxtKhachThanhToanEdit, new Point(84, 6));

            // Click 'Khách Đưa Đủ' button
            Mouse.Click(uIKháchĐưaĐủButton, new Point(274, 22));

            // Click 'TẠM TÍNH' button
            Mouse.Click(uITẠMTÍNHButton, new Point(70, 17));

            // Click 'TẠO HÓA ĐƠN && XUẤT BILL' button
            Mouse.Click(uITẠOHÓAĐƠNXUẤTBILLButton, new Point(51, 15));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(19, 11));
        }
        
        /// <summary>
        /// TestBuoc1 - Use 'TestBuoc1Params' to pass parameters into this method.
        /// </summary>
        public void TestBuoc1()
        {
            #region Variable Declarations
            WinComboBox uICboSanPhamComboBox = this.UIBánhàngWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinComboBox uICbSoLuongComboBox = this.UIBánhàngWindow.UICbSoLuongWindow.UICbSoLuongComboBox;
            WinButton uITHÊMVÀOGIỎButton = this.UIBánhàngWindow.UITHÊMVÀOGIỎWindow.UITHÊMVÀOGIỎButton;
            WinButton uITẠMTÍNHButton = this.UIBánhàngWindow.UITẠMTÍNHWindow.UITẠMTÍNHButton;
            WinComboBox uICbKhachHangComboBox = this.UIBánhàngWindow.UICbKhachHangWindow.UICbKhachHangComboBox;
            WinWindow uIItem0Window = this.UIBánhàngWindow.UIHóađơnGroup.UIItem0Window;
            WinEdit uITxtKhachThanhToanEdit = this.UIBánhàngWindow.UIItem0Window.UITxtKhachThanhToanEdit;
            WinButton uIKháchĐưaĐủButton = this.UIFrm_ChonTienWindow.UIKháchĐưaĐủWindow.UIKháchĐưaĐủButton;
            WinButton uITẠOHÓAĐƠNXUẤTBILLButton = this.UIBánhàngWindow.UITẠOHÓAĐƠNXUẤTBILLWindow.UITẠOHÓAĐƠNXUẤTBILLButton;
            WinButton uIXuấtBillButton = this.UIFrm_HoaDonWindow.UIXuấtBillWindow.UIXuấtBillButton;
            WinButton uICloseButton = this.UIFrm_HoaDonWindow.UIFrm_HoaDonTitleBar.UICloseButton;
            #endregion

            // Select 'White conc' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.TestBuoc1Params.UICboSanPhamComboBoxSelectedItem;

            // Select '1' in 'cbSoLuong' combo box
            uICbSoLuongComboBox.SelectedItem = this.TestBuoc1Params.UICbSoLuongComboBoxSelectedItem;

            // Click 'THÊM VÀO GIỎ' button
            Mouse.Click(uITHÊMVÀOGIỎButton, new Point(92, 25));

            // Click 'TẠM TÍNH' button
            Mouse.Click(uITẠMTÍNHButton, new Point(83, 14));

            // Select 'Lê Vĩnh Khiêm' in 'cbKhachHang' combo box
            uICbKhachHangComboBox.SelectedItem = this.TestBuoc1Params.UICbKhachHangComboBoxSelectedItem;

            // Click '0' window
            Mouse.Click(uIItem0Window, new Point(82, 1));

            // Click 'txtKhachThanhToan' text box
            Mouse.Click(uITxtKhachThanhToanEdit, new Point(70, 7));

            // Click 'Khách Đưa Đủ' button
            Mouse.Click(uIKháchĐưaĐủButton, new Point(227, 16));

            // Click 'TẠM TÍNH' button
            Mouse.Click(uITẠMTÍNHButton, new Point(56, 26));

            // Click 'TẠO HÓA ĐƠN && XUẤT BILL' button
            Mouse.Click(uITẠOHÓAĐƠNXUẤTBILLButton, new Point(49, 23));

            // Click 'Xuất Bill' button
            Mouse.Click(uIXuấtBillButton, new Point(51, 8));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(24, 11));
        }
        
        /// <summary>
        /// Buoc1Test - Use 'Buoc1TestParams' to pass parameters into this method.
        /// </summary>
        public void Buoc1Test()
        {
            #region Variable Declarations
            WinComboBox uICboSanPhamComboBox = this.UIBánhàngWindow.UICboSanPhamWindow.UICboSanPhamComboBox;
            WinComboBox uICbSoLuongComboBox = this.UIBánhàngWindow.UICbSoLuongWindow.UICbSoLuongComboBox;
            WinButton uITHÊMVÀOGIỎButton = this.UIBánhàngWindow.UITHÊMVÀOGIỎWindow.UITHÊMVÀOGIỎButton;
            WinComboBox uICbKhachHangComboBox = this.UIBánhàngWindow.UICbKhachHangWindow.UICbKhachHangComboBox;
            WinButton uITẠMTÍNHButton = this.UIBánhàngWindow.UITẠMTÍNHWindow.UITẠMTÍNHButton;
            WinEdit uITxtKhachThanhToanEdit = this.UIBánhàngWindow.UIItem0Window.UITxtKhachThanhToanEdit;
            WinButton uIKháchĐưaĐủButton = this.UIFrm_ChonTienWindow.UIKháchĐưaĐủWindow.UIKháchĐưaĐủButton;
            WinButton uITẠOHÓAĐƠNXUẤTBILLButton = this.UIBánhàngWindow.UITẠOHÓAĐƠNXUẤTBILLWindow.UITẠOHÓAĐƠNXUẤTBILLButton;
            WinButton uICloseButton = this.UIFrm_HoaDonWindow.UIFrm_HoaDonTitleBar.UICloseButton;
            #endregion

            // Select 'White conc' in 'cboSanPham' combo box
            uICboSanPhamComboBox.SelectedItem = this.Buoc1TestParams.UICboSanPhamComboBoxSelectedItem;

            // Select '1' in 'cbSoLuong' combo box
            uICbSoLuongComboBox.SelectedItem = this.Buoc1TestParams.UICbSoLuongComboBoxSelectedItem;

            // Click 'THÊM VÀO GIỎ' button
            Mouse.Click(uITHÊMVÀOGIỎButton, new Point(190, 12));

            // Select 'Phan Thanh Hải' in 'cbKhachHang' combo box
            uICbKhachHangComboBox.SelectedItem = this.Buoc1TestParams.UICbKhachHangComboBoxSelectedItem;

            // Click 'TẠM TÍNH' button
            Mouse.Click(uITẠMTÍNHButton, new Point(48, 23));

            // Click 'txtKhachThanhToan' text box
            Mouse.Click(uITxtKhachThanhToanEdit, new Point(109, 12));

            // Click 'Khách Đưa Đủ' button
            Mouse.Click(uIKháchĐưaĐủButton, new Point(127, 32));

            // Click 'TẠM TÍNH' button
            Mouse.Click(uITẠMTÍNHButton, new Point(79, 7));

            // Click 'TẠO HÓA ĐƠN && XUẤT BILL' button
            Mouse.Click(uITẠOHÓAĐƠNXUẤTBILLButton, new Point(51, 15));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(31, 18));
        }
        
        /// <summary>
        /// TestValue - Use 'TestValueExpectedValues' to pass parameters into this method.
        /// </summary>
        public void TestValue()
        {
            #region Variable Declarations
            WinEdit uITxtTienTraKhachEdit = this.UIBánhàngWindow.UIItem0Window1.UITxtTienTraKhachEdit;
            #endregion

            // Verify that the 'ControlType' property of 'txtTienTraKhach' text box is not equal to '0'
            Assert.AreNotEqual(this.TestValueExpectedValues.UITxtTienTraKhachEditControlType, uITxtTienTraKhachEdit.ControlType.ToString(), "Sai Roi Nha");
        }
        
        /// <summary>
        /// RecordedMethodInPutSP - Use 'RecordedMethodInPutSPParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethodInPutSP()
        {
            #region Variable Declarations
            WinButton uIThêmsảnphẩmButton = this.UIFrmThietLapGiaWindow.UIThêmsảnphẩmWindow.UIThêmsảnphẩmButton;
            WinEdit uITxtTenSPEdit = this.UIFrmThietLapGiaWindow.UITxtTenSPWindow.UITxtTenSPEdit;
            WinEdit uITxtGiaNhapEdit = this.UIFrmThietLapGiaWindow.UITxtGiaNhapWindow.UITxtGiaNhapEdit;
            WinEdit uITxtGiaBanEdit = this.UIFrmThietLapGiaWindow.UITxtGiaBanWindow.UITxtGiaBanEdit;
            WinEdit uITxtMoTaEdit = this.UIFrmThietLapGiaWindow.UITxtMoTaWindow.UITxtMoTaEdit;
            WinButton uIChọnhìnhButton = this.UIFrmThietLapGiaWindow.UIChọnhìnhWindow.UIChọnhìnhButton;
            WinTreeItem uIChinhAnhIconTreeItem = this.UIOpenWindow.UITreeViewWindow.UIQuickaccessTreeItem.UIChinhAnhIconTreeItem;
            WinListItem uIGaijpgListItem = this.UIOpenWindow.UIItemWindow.UIItemsViewList.UIGaijpgListItem;
            WinButton uIOpenButton = this.UIOpenWindow.UIOpenWindow1.UIOpenButton;
            WinButton uILưuButton = this.UIFrmThietLapGiaWindow.UILưuWindow.UILưuButton;
            #endregion

            // Click 'Thêm sản phẩm' button
            Mouse.Click(uIThêmsảnphẩmButton, new Point(73, 20));

            // Type 'hihi' in 'txtTenSP' text box
            uITxtTenSPEdit.Text = this.RecordedMethodInPutSPParams.UITxtTenSPEditText;

            // Type '{Tab}' in 'txtTenSP' text box
            Keyboard.SendKeys(uITxtTenSPEdit, this.RecordedMethodInPutSPParams.UITxtTenSPEditSendKeys, ModifierKeys.None);

            // Last mouse action was not recorded.

            // Type '1000' in 'txtGiaNhap' text box
            uITxtGiaNhapEdit.Text = this.RecordedMethodInPutSPParams.UITxtGiaNhapEditText;

            // Type '{Tab}' in 'txtGiaNhap' text box
            Keyboard.SendKeys(uITxtGiaNhapEdit, this.RecordedMethodInPutSPParams.UITxtGiaNhapEditSendKeys, ModifierKeys.None);

            // Type '20000' in 'txtGiaBan' text box
            uITxtGiaBanEdit.Text = this.RecordedMethodInPutSPParams.UITxtGiaBanEditText;

            // Type '{Tab}' in 'txtGiaBan' text box
            Keyboard.SendKeys(uITxtGiaBanEdit, this.RecordedMethodInPutSPParams.UITxtGiaBanEditSendKeys, ModifierKeys.None);

            // Type 'san phamhihi' in 'txtMoTa' text box
            uITxtMoTaEdit.Text = this.RecordedMethodInPutSPParams.UITxtMoTaEditText;

            // Click 'Chọn hình' button
            Mouse.Click(uIChọnhìnhButton, new Point(57, 18));

            // Click 'Quick access' -> 'chinhAnhIcon' tree item
            Mouse.Click(uIChinhAnhIconTreeItem, new Point(35, 15));

            // Click 'gai.jpg' list item
            Mouse.Click(uIGaijpgListItem, new Point(43, 77));

            // Click '&Open' button
            Mouse.Click(uIOpenButton, new Point(55, 19));

            // Click 'Lưu' button
            Mouse.Click(uILưuButton, new Point(13, 18));
        }
        
        /// <summary>
        /// AssertMethodThemSP - Use 'AssertMethodThemSPExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodThemSP()
        {
            #region Variable Declarations
            WinText uIThêmsảnphẩmthànhcText = this.UIThôngbáovuiWindow.UIThêmsảnphẩmthànhcWindow.UIThêmsảnphẩmthànhcText;
            #endregion

            // Verify that the 'DisplayText' property of 'Thêm sản phẩm thành công!' label equals 'Thêm sản phẩm thành công!'
            Assert.AreEqual(this.AssertMethodThemSPExpectedValues.UIThêmsảnphẩmthànhcTextDisplayText, uIThêmsảnphẩmthànhcText.DisplayText);
        }
        
        /// <summary>
        /// RecordedMethodKetThuc
        /// </summary>
        public void RecordedMethodKetThuc()
        {
            #region Variable Declarations
            WinButton uIOKButton = this.UIThôngbáovuiWindow.UIOKWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(35, 13));
        }
        
        /// <summary>
        /// AssertMethodmasp - Use 'AssertMethodmaspExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodmasp()
        {
            #region Variable Declarations
            WinCell uIItem25Cell = this.UIFrmThietLapGiaWindow.UIDataGridSanPhamWindow.UIDataGridViewTable.UIRow5Row.UIItem25Cell;
            #endregion

            // Verify that the 'FriendlyName' property of '25' cell equals '25'
            Assert.AreEqual(this.AssertMethodmaspExpectedValues.UIItem25CellFriendlyName, uIItem25Cell.FriendlyName);
        }
        
        /// <summary>
        /// AssertMethodTensp - Use 'AssertMethodTenspExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodTensp()
        {
            #region Variable Declarations
            WinCell uIHihiCell = this.UIFrmThietLapGiaWindow.UIDataGridSanPhamWindow.UIDataGridViewTable.UIRow5Row.UIHihiCell;
            #endregion

            // Verify that the 'FriendlyName' property of 'hihi' cell equals 'hihi'
            Assert.AreEqual(this.AssertMethodTenspExpectedValues.UIHihiCellFriendlyName, uIHihiCell.FriendlyName);
        }
        
        /// <summary>
        /// AssertMethodTensp22 - Use 'AssertMethodTensp22ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodTensp22()
        {
            #region Variable Declarations
            WinCell uIHihiCell = this.UIFrmThietLapGiaWindow.UIDataGridSanPhamWindow.UIDataGridViewTable.UIRow5Row.UIHihiCell;
            #endregion

            // Verify that the 'Value' property of 'hihi' cell equals 'hihi'
            Assert.AreEqual(this.AssertMethodTensp22ExpectedValues.UIHihiCellValue, uIHihiCell.Value);
        }
        
        /// <summary>
        /// RecordedMethodKhongDuocBoTrong
        /// </summary>
        public void RecordedMethodKhongDuocBoTrong()
        {
            #region Variable Declarations
            WinButton uILưuButton = this.UIFrmThietLapGiaWindow.UILưuWindow.UILưuButton;
            #endregion

            // Click 'Lưu' button
            Mouse.Click(uILưuButton, new Point(75, 24));
        }
        
        /// <summary>
        /// AssertMethodKhongDuocBoTrong - Use 'AssertMethodKhongDuocBoTrongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethodKhongDuocBoTrong()
        {
            #region Variable Declarations
            WinText uIThôngtinkhôngđượcboText = this.UIThôngbáoWindow.UIThôngtinkhôngđượcboWindow.UIThôngtinkhôngđượcboText;
            #endregion

            // Verify that the 'FriendlyName' property of 'Thông tin không được bỏ trống!' label equals 'Thông tin không được bỏ trống!'
            Assert.AreEqual(this.AssertMethodKhongDuocBoTrongExpectedValues.UIThôngtinkhôngđượcboTextFriendlyName, uIThôngtinkhôngđượcboText.FriendlyName);
        }
        
        #region Properties
        public virtual BanHangTestParams BanHangTestParams
        {
            get
            {
                if ((this.mBanHangTestParams == null))
                {
                    this.mBanHangTestParams = new BanHangTestParams();
                }
                return this.mBanHangTestParams;
            }
        }
        
        public virtual TestLan2Params TestLan2Params
        {
            get
            {
                if ((this.mTestLan2Params == null))
                {
                    this.mTestLan2Params = new TestLan2Params();
                }
                return this.mTestLan2Params;
            }
        }
        
        public virtual TestBuoc1Params TestBuoc1Params
        {
            get
            {
                if ((this.mTestBuoc1Params == null))
                {
                    this.mTestBuoc1Params = new TestBuoc1Params();
                }
                return this.mTestBuoc1Params;
            }
        }
        
        public virtual Buoc1TestParams Buoc1TestParams
        {
            get
            {
                if ((this.mBuoc1TestParams == null))
                {
                    this.mBuoc1TestParams = new Buoc1TestParams();
                }
                return this.mBuoc1TestParams;
            }
        }
        
        public virtual TestValueExpectedValues TestValueExpectedValues
        {
            get
            {
                if ((this.mTestValueExpectedValues == null))
                {
                    this.mTestValueExpectedValues = new TestValueExpectedValues();
                }
                return this.mTestValueExpectedValues;
            }
        }
        
        public virtual RecordedMethodInPutSPParams RecordedMethodInPutSPParams
        {
            get
            {
                if ((this.mRecordedMethodInPutSPParams == null))
                {
                    this.mRecordedMethodInPutSPParams = new RecordedMethodInPutSPParams();
                }
                return this.mRecordedMethodInPutSPParams;
            }
        }
        
        public virtual AssertMethodThemSPExpectedValues AssertMethodThemSPExpectedValues
        {
            get
            {
                if ((this.mAssertMethodThemSPExpectedValues == null))
                {
                    this.mAssertMethodThemSPExpectedValues = new AssertMethodThemSPExpectedValues();
                }
                return this.mAssertMethodThemSPExpectedValues;
            }
        }
        
        public virtual AssertMethodmaspExpectedValues AssertMethodmaspExpectedValues
        {
            get
            {
                if ((this.mAssertMethodmaspExpectedValues == null))
                {
                    this.mAssertMethodmaspExpectedValues = new AssertMethodmaspExpectedValues();
                }
                return this.mAssertMethodmaspExpectedValues;
            }
        }
        
        public virtual AssertMethodTenspExpectedValues AssertMethodTenspExpectedValues
        {
            get
            {
                if ((this.mAssertMethodTenspExpectedValues == null))
                {
                    this.mAssertMethodTenspExpectedValues = new AssertMethodTenspExpectedValues();
                }
                return this.mAssertMethodTenspExpectedValues;
            }
        }
        
        public virtual AssertMethodTensp22ExpectedValues AssertMethodTensp22ExpectedValues
        {
            get
            {
                if ((this.mAssertMethodTensp22ExpectedValues == null))
                {
                    this.mAssertMethodTensp22ExpectedValues = new AssertMethodTensp22ExpectedValues();
                }
                return this.mAssertMethodTensp22ExpectedValues;
            }
        }
        
        public virtual AssertMethodKhongDuocBoTrongExpectedValues AssertMethodKhongDuocBoTrongExpectedValues
        {
            get
            {
                if ((this.mAssertMethodKhongDuocBoTrongExpectedValues == null))
                {
                    this.mAssertMethodKhongDuocBoTrongExpectedValues = new AssertMethodKhongDuocBoTrongExpectedValues();
                }
                return this.mAssertMethodKhongDuocBoTrongExpectedValues;
            }
        }
        
        public UIFrmDangNhapWindow UIFrmDangNhapWindow
        {
            get
            {
                if ((this.mUIFrmDangNhapWindow == null))
                {
                    this.mUIFrmDangNhapWindow = new UIFrmDangNhapWindow();
                }
                return this.mUIFrmDangNhapWindow;
            }
        }
        
        public UIBánHàngWindow UIBánHàngWindow
        {
            get
            {
                if ((this.mUIBánHàngWindow == null))
                {
                    this.mUIBánHàngWindow = new UIBánHàngWindow();
                }
                return this.mUIBánHàngWindow;
            }
        }
        
        public UIBánhàngWindow UIBánhàngWindow
        {
            get
            {
                if ((this.mUIBánhàngWindow == null))
                {
                    this.mUIBánhàngWindow = new UIBánhàngWindow();
                }
                return this.mUIBánhàngWindow;
            }
        }
        
        public UIThôngbáoWindow UIThôngbáoWindow
        {
            get
            {
                if ((this.mUIThôngbáoWindow == null))
                {
                    this.mUIThôngbáoWindow = new UIThôngbáoWindow();
                }
                return this.mUIThôngbáoWindow;
            }
        }
        
        public UIFrm_ChonTienWindow UIFrm_ChonTienWindow
        {
            get
            {
                if ((this.mUIFrm_ChonTienWindow == null))
                {
                    this.mUIFrm_ChonTienWindow = new UIFrm_ChonTienWindow();
                }
                return this.mUIFrm_ChonTienWindow;
            }
        }
        
        public UIFrm_HoaDonWindow UIFrm_HoaDonWindow
        {
            get
            {
                if ((this.mUIFrm_HoaDonWindow == null))
                {
                    this.mUIFrm_HoaDonWindow = new UIFrm_HoaDonWindow();
                }
                return this.mUIFrm_HoaDonWindow;
            }
        }
        
        public UIFrmThietLapGiaWindow UIFrmThietLapGiaWindow
        {
            get
            {
                if ((this.mUIFrmThietLapGiaWindow == null))
                {
                    this.mUIFrmThietLapGiaWindow = new UIFrmThietLapGiaWindow();
                }
                return this.mUIFrmThietLapGiaWindow;
            }
        }
        
        public UIOpenWindow UIOpenWindow
        {
            get
            {
                if ((this.mUIOpenWindow == null))
                {
                    this.mUIOpenWindow = new UIOpenWindow();
                }
                return this.mUIOpenWindow;
            }
        }
        
        public UIThôngbáovuiWindow UIThôngbáovuiWindow
        {
            get
            {
                if ((this.mUIThôngbáovuiWindow == null))
                {
                    this.mUIThôngbáovuiWindow = new UIThôngbáovuiWindow();
                }
                return this.mUIThôngbáovuiWindow;
            }
        }
        
        public UIThôngbáoWindow UIThôngbáoWindow
        {
            get
            {
                if ((this.mUIThôngbáoWindow == null))
                {
                    this.mUIThôngbáoWindow = new UIThôngbáoWindow();
                }
                return this.mUIThôngbáoWindow;
            }
        }
        #endregion
        
        #region Fields
        private BanHangTestParams mBanHangTestParams;
        
        private TestLan2Params mTestLan2Params;
        
        private TestBuoc1Params mTestBuoc1Params;
        
        private Buoc1TestParams mBuoc1TestParams;
        
        private TestValueExpectedValues mTestValueExpectedValues;
        
        private RecordedMethodInPutSPParams mRecordedMethodInPutSPParams;
        
        private AssertMethodThemSPExpectedValues mAssertMethodThemSPExpectedValues;
        
        private AssertMethodmaspExpectedValues mAssertMethodmaspExpectedValues;
        
        private AssertMethodTenspExpectedValues mAssertMethodTenspExpectedValues;
        
        private AssertMethodTensp22ExpectedValues mAssertMethodTensp22ExpectedValues;
        
        private AssertMethodKhongDuocBoTrongExpectedValues mAssertMethodKhongDuocBoTrongExpectedValues;
        
        private UIFrmDangNhapWindow mUIFrmDangNhapWindow;
        
        private UIBánHàngWindow mUIBánHàngWindow;
        
        private UIBánhàngWindow mUIBánhàngWindow;
        
        private UIThôngbáoWindow mUIThôngbáoWindow;
        
        private UIFrm_ChonTienWindow mUIFrm_ChonTienWindow;
        
        private UIFrm_HoaDonWindow mUIFrm_HoaDonWindow;
        
        private UIFrmThietLapGiaWindow mUIFrmThietLapGiaWindow;
        
        private UIOpenWindow mUIOpenWindow;
        
        private UIThôngbáovuiWindow mUIThôngbáovuiWindow;
        
        private UIThôngbáoWindow mUIThôngbáoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'BanHangTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class BanHangTestParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'QL003' in 'txtTaiKhoan' text box
        /// </summary>
        public string UITxtTaiKhoanEditText = "QL003";
        
        /// <summary>
        /// Type '{NumPad1}{NumPad2}{NumPad3}' in 'txtMatKhau' text box
        /// </summary>
        public string UITxtMatKhauEditSendKeys = "{NumPad1}{NumPad2}{NumPad3}";
        
        /// <summary>
        /// Select 'White conc' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "White conc";
        
        /// <summary>
        /// Select '2' in 'cbSoLuong' combo box
        /// </summary>
        public string UICbSoLuongComboBoxSelectedItem = "2";
        
        /// <summary>
        /// Select 'Lê Vĩnh Khiêm' in 'cbKhachHang' combo box
        /// </summary>
        public string UICbKhachHangComboBoxSelectedItem = "Lê Vĩnh Khiêm";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestLan2'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestLan2Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'White conc' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "White conc";
        
        /// <summary>
        /// Select '3' in 'cbSoLuong' combo box
        /// </summary>
        public string UICbSoLuongComboBoxSelectedItem = "3";
        
        /// <summary>
        /// Select 'Nguyễn Quang Huy' in 'cbKhachHang' combo box
        /// </summary>
        public string UICbKhachHangComboBoxSelectedItem = "Nguyễn Quang Huy";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestBuoc1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestBuoc1Params
    {
        
        #region Fields
        /// <summary>
        /// Select 'White conc' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "White conc";
        
        /// <summary>
        /// Select '1' in 'cbSoLuong' combo box
        /// </summary>
        public string UICbSoLuongComboBoxSelectedItem = "1";
        
        /// <summary>
        /// Select 'Lê Vĩnh Khiêm' in 'cbKhachHang' combo box
        /// </summary>
        public string UICbKhachHangComboBoxSelectedItem = "Lê Vĩnh Khiêm";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Buoc1Test'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class Buoc1TestParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'White conc' in 'cboSanPham' combo box
        /// </summary>
        public string UICboSanPhamComboBoxSelectedItem = "White conc";
        
        /// <summary>
        /// Select '1' in 'cbSoLuong' combo box
        /// </summary>
        public string UICbSoLuongComboBoxSelectedItem = "1";
        
        /// <summary>
        /// Select 'Phan Thanh Hải' in 'cbKhachHang' combo box
        /// </summary>
        public string UICbKhachHangComboBoxSelectedItem = "Phan Thanh Hải";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestValue'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class TestValueExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'txtTienTraKhach' text box is not equal to '0'
        /// </summary>
        public string UITxtTienTraKhachEditControlType = "0";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethodInPutSP'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class RecordedMethodInPutSPParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'hihi' in 'txtTenSP' text box
        /// </summary>
        public string UITxtTenSPEditText = "hihi";
        
        /// <summary>
        /// Type '{Tab}' in 'txtTenSP' text box
        /// </summary>
        public string UITxtTenSPEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '1000' in 'txtGiaNhap' text box
        /// </summary>
        public string UITxtGiaNhapEditText = "1000";
        
        /// <summary>
        /// Type '{Tab}' in 'txtGiaNhap' text box
        /// </summary>
        public string UITxtGiaNhapEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '20000' in 'txtGiaBan' text box
        /// </summary>
        public string UITxtGiaBanEditText = "20000";
        
        /// <summary>
        /// Type '{Tab}' in 'txtGiaBan' text box
        /// </summary>
        public string UITxtGiaBanEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'san phamhihi' in 'txtMoTa' text box
        /// </summary>
        public string UITxtMoTaEditText = "san phamhihi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodThemSP'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodThemSPExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Thêm sản phẩm thành công!' label equals 'Thêm sản phẩm thành công!'
        /// </summary>
        public string UIThêmsảnphẩmthànhcTextDisplayText = "Thêm sản phẩm thành công!";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodmasp'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodmaspExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of '25' cell equals '25'
        /// </summary>
        public string UIItem25CellFriendlyName = "25";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodTensp'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodTenspExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'hihi' cell equals 'hihi'
        /// </summary>
        public string UIHihiCellFriendlyName = "hihi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodTensp22'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodTensp22ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Value' property of 'hihi' cell equals 'hihi'
        /// </summary>
        public string UIHihiCellValue = "hihi";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethodKhongDuocBoTrong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class AssertMethodKhongDuocBoTrongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'FriendlyName' property of 'Thông tin không được bỏ trống!' label equals 'Thông tin không được bỏ trống!'
        /// </summary>
        public string UIThôngtinkhôngđượcboTextFriendlyName = "Thông tin không được bỏ trống!";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIFrmDangNhapWindow : WinWindow
    {
        
        public UIFrmDangNhapWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "frmDangNhap";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("frmDangNhap");
            #endregion
        }
        
        #region Properties
        public UIUsernameWindow UIUsernameWindow
        {
            get
            {
                if ((this.mUIUsernameWindow == null))
                {
                    this.mUIUsernameWindow = new UIUsernameWindow(this);
                }
                return this.mUIUsernameWindow;
            }
        }
        
        public UIPasswordWindow UIPasswordWindow
        {
            get
            {
                if ((this.mUIPasswordWindow == null))
                {
                    this.mUIPasswordWindow = new UIPasswordWindow(this);
                }
                return this.mUIPasswordWindow;
            }
        }
        
        public UIĐăngnhậpWindow UIĐăngnhậpWindow
        {
            get
            {
                if ((this.mUIĐăngnhậpWindow == null))
                {
                    this.mUIĐăngnhậpWindow = new UIĐăngnhậpWindow(this);
                }
                return this.mUIĐăngnhậpWindow;
            }
        }
        
        public WinClient UIFrmDangNhapClient
        {
            get
            {
                if ((this.mUIFrmDangNhapClient == null))
                {
                    this.mUIFrmDangNhapClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIFrmDangNhapClient.SearchProperties[WinControl.PropertyNames.Name] = "frmDangNhap";
                    this.mUIFrmDangNhapClient.WindowTitles.Add("frmDangNhap");
                    #endregion
                }
                return this.mUIFrmDangNhapClient;
            }
        }
        #endregion
        
        #region Fields
        private UIUsernameWindow mUIUsernameWindow;
        
        private UIPasswordWindow mUIPasswordWindow;
        
        private UIĐăngnhậpWindow mUIĐăngnhậpWindow;
        
        private WinClient mUIFrmDangNhapClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIUsernameWindow : WinWindow
    {
        
        public UIUsernameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtTaiKhoan";
            this.WindowTitles.Add("frmDangNhap");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtTaiKhoanEdit
        {
            get
            {
                if ((this.mUITxtTaiKhoanEdit == null))
                {
                    this.mUITxtTaiKhoanEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTaiKhoanEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Đăng nhập";
                    this.mUITxtTaiKhoanEdit.WindowTitles.Add("frmDangNhap");
                    #endregion
                }
                return this.mUITxtTaiKhoanEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtTaiKhoanEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIPasswordWindow : WinWindow
    {
        
        public UIPasswordWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtMatKhau";
            this.WindowTitles.Add("frmDangNhap");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtMatKhauEdit
        {
            get
            {
                if ((this.mUITxtMatKhauEdit == null))
                {
                    this.mUITxtMatKhauEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtMatKhauEdit.WindowTitles.Add("frmDangNhap");
                    #endregion
                }
                return this.mUITxtMatKhauEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtMatKhauEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIĐăngnhậpWindow : WinWindow
    {
        
        public UIĐăngnhậpWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDangNhap";
            this.WindowTitles.Add("frmDangNhap");
            #endregion
        }
        
        #region Properties
        public WinButton UIĐăngnhậpButton
        {
            get
            {
                if ((this.mUIĐăngnhậpButton == null))
                {
                    this.mUIĐăngnhậpButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIĐăngnhậpButton.SearchProperties[WinButton.PropertyNames.Name] = "Đăng nhập";
                    this.mUIĐăngnhậpButton.WindowTitles.Add("frmDangNhap");
                    #endregion
                }
                return this.mUIĐăngnhậpButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIĐăngnhậpButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIBánHàngWindow : WinWindow
    {
        
        public UIBánHàngWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Bán Hàng";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.BUTTON", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Bán Hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UIBánHàngButton
        {
            get
            {
                if ((this.mUIBánHàngButton == null))
                {
                    this.mUIBánHàngButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBánHàngButton.SearchProperties[WinButton.PropertyNames.Name] = "Bán Hàng";
                    this.mUIBánHàngButton.WindowTitles.Add("Bán Hàng");
                    #endregion
                }
                return this.mUIBánHàngButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIBánHàngButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIBánhàngWindow : WinWindow
    {
        
        public UIBánhàngWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "                                                       Bán hàng";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("                                                       Bán hàng");
            #endregion
        }
        
        #region Properties
        public UICboSanPhamWindow UICboSanPhamWindow
        {
            get
            {
                if ((this.mUICboSanPhamWindow == null))
                {
                    this.mUICboSanPhamWindow = new UICboSanPhamWindow(this);
                }
                return this.mUICboSanPhamWindow;
            }
        }
        
        public UICbSoLuongWindow UICbSoLuongWindow
        {
            get
            {
                if ((this.mUICbSoLuongWindow == null))
                {
                    this.mUICbSoLuongWindow = new UICbSoLuongWindow(this);
                }
                return this.mUICbSoLuongWindow;
            }
        }
        
        public UITHÊMVÀOGIỎWindow UITHÊMVÀOGIỎWindow
        {
            get
            {
                if ((this.mUITHÊMVÀOGIỎWindow == null))
                {
                    this.mUITHÊMVÀOGIỎWindow = new UITHÊMVÀOGIỎWindow(this);
                }
                return this.mUITHÊMVÀOGIỎWindow;
            }
        }
        
        public UICbKhachHangWindow UICbKhachHangWindow
        {
            get
            {
                if ((this.mUICbKhachHangWindow == null))
                {
                    this.mUICbKhachHangWindow = new UICbKhachHangWindow(this);
                }
                return this.mUICbKhachHangWindow;
            }
        }
        
        public UITẠMTÍNHWindow UITẠMTÍNHWindow
        {
            get
            {
                if ((this.mUITẠMTÍNHWindow == null))
                {
                    this.mUITẠMTÍNHWindow = new UITẠMTÍNHWindow(this);
                }
                return this.mUITẠMTÍNHWindow;
            }
        }
        
        public UIHóađơnGroup UIHóađơnGroup
        {
            get
            {
                if ((this.mUIHóađơnGroup == null))
                {
                    this.mUIHóađơnGroup = new UIHóađơnGroup(this);
                }
                return this.mUIHóađơnGroup;
            }
        }
        
        public UIItem0Window UIItem0Window
        {
            get
            {
                if ((this.mUIItem0Window == null))
                {
                    this.mUIItem0Window = new UIItem0Window(this);
                }
                return this.mUIItem0Window;
            }
        }
        
        public UITẠOHÓAĐƠNXUẤTBILLWindow UITẠOHÓAĐƠNXUẤTBILLWindow
        {
            get
            {
                if ((this.mUITẠOHÓAĐƠNXUẤTBILLWindow == null))
                {
                    this.mUITẠOHÓAĐƠNXUẤTBILLWindow = new UITẠOHÓAĐƠNXUẤTBILLWindow(this);
                }
                return this.mUITẠOHÓAĐƠNXUẤTBILLWindow;
            }
        }
        
        public UITxtMoTaWindow UITxtMoTaWindow
        {
            get
            {
                if ((this.mUITxtMoTaWindow == null))
                {
                    this.mUITxtMoTaWindow = new UITxtMoTaWindow(this);
                }
                return this.mUITxtMoTaWindow;
            }
        }
        
        public UIItem0Window1 UIItem0Window1
        {
            get
            {
                if ((this.mUIItem0Window1 == null))
                {
                    this.mUIItem0Window1 = new UIItem0Window1(this);
                }
                return this.mUIItem0Window1;
            }
        }
        #endregion
        
        #region Fields
        private UICboSanPhamWindow mUICboSanPhamWindow;
        
        private UICbSoLuongWindow mUICbSoLuongWindow;
        
        private UITHÊMVÀOGIỎWindow mUITHÊMVÀOGIỎWindow;
        
        private UICbKhachHangWindow mUICbKhachHangWindow;
        
        private UITẠMTÍNHWindow mUITẠMTÍNHWindow;
        
        private UIHóađơnGroup mUIHóađơnGroup;
        
        private UIItem0Window mUIItem0Window;
        
        private UITẠOHÓAĐƠNXUẤTBILLWindow mUITẠOHÓAĐƠNXUẤTBILLWindow;
        
        private UITxtMoTaWindow mUITxtMoTaWindow;
        
        private UIItem0Window1 mUIItem0Window1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICboSanPhamWindow : WinWindow
    {
        
        public UICboSanPhamWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cboSanPham";
            this.WindowTitles.Add("                                                       Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICboSanPhamComboBox
        {
            get
            {
                if ((this.mUICboSanPhamComboBox == null))
                {
                    this.mUICboSanPhamComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUICboSanPhamComboBox.WindowTitles.Add("                                                       Bán hàng");
                    #endregion
                }
                return this.mUICboSanPhamComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICboSanPhamComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICbSoLuongWindow : WinWindow
    {
        
        public UICbSoLuongWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbSoLuong";
            this.WindowTitles.Add("                                                       Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICbSoLuongComboBox
        {
            get
            {
                if ((this.mUICbSoLuongComboBox == null))
                {
                    this.mUICbSoLuongComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUICbSoLuongComboBox.WindowTitles.Add("                                                       Bán hàng");
                    #endregion
                }
                return this.mUICbSoLuongComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICbSoLuongComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITHÊMVÀOGIỎWindow : WinWindow
    {
        
        public UITHÊMVÀOGIỎWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnThemVaoGio";
            this.WindowTitles.Add("                                                       Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UITHÊMVÀOGIỎButton
        {
            get
            {
                if ((this.mUITHÊMVÀOGIỎButton == null))
                {
                    this.mUITHÊMVÀOGIỎButton = new WinButton(this);
                    #region Search Criteria
                    this.mUITHÊMVÀOGIỎButton.SearchProperties[WinButton.PropertyNames.Name] = "THÊM VÀO GIỎ";
                    this.mUITHÊMVÀOGIỎButton.WindowTitles.Add("                                                       Bán hàng");
                    #endregion
                }
                return this.mUITHÊMVÀOGIỎButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUITHÊMVÀOGIỎButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UICbKhachHangWindow : WinWindow
    {
        
        public UICbKhachHangWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "cbKhachHang";
            this.WindowTitles.Add("                                                       Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinComboBox UICbKhachHangComboBox
        {
            get
            {
                if ((this.mUICbKhachHangComboBox == null))
                {
                    this.mUICbKhachHangComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUICbKhachHangComboBox.WindowTitles.Add("                                                       Bán hàng");
                    #endregion
                }
                return this.mUICbKhachHangComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUICbKhachHangComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITẠMTÍNHWindow : WinWindow
    {
        
        public UITẠMTÍNHWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTamTinh";
            this.WindowTitles.Add("                                                       Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UITẠMTÍNHButton
        {
            get
            {
                if ((this.mUITẠMTÍNHButton == null))
                {
                    this.mUITẠMTÍNHButton = new WinButton(this);
                    #region Search Criteria
                    this.mUITẠMTÍNHButton.SearchProperties[WinButton.PropertyNames.Name] = "TẠM TÍNH";
                    this.mUITẠMTÍNHButton.WindowTitles.Add("                                                       Bán hàng");
                    #endregion
                }
                return this.mUITẠMTÍNHButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUITẠMTÍNHButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIHóađơnGroup : WinGroup
    {
        
        public UIHóađơnGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Hóa đơn";
            this.WindowTitles.Add("                                                       Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinWindow UIItem0Window
        {
            get
            {
                if ((this.mUIItem0Window == null))
                {
                    this.mUIItem0Window = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItem0Window.SearchProperties[WinWindow.PropertyNames.Name] = "0";
                    this.mUIItem0Window.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUIItem0Window.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
                    this.mUIItem0Window.WindowTitles.Add("                                                       Bán hàng");
                    #endregion
                }
                return this.mUIItem0Window;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIItem0Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem0Window : WinWindow
    {
        
        public UIItem0Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtKhachThanhToan";
            this.WindowTitles.Add("                                                       Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtKhachThanhToanEdit
        {
            get
            {
                if ((this.mUITxtKhachThanhToanEdit == null))
                {
                    this.mUITxtKhachThanhToanEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtKhachThanhToanEdit.WindowTitles.Add("                                                       Bán hàng");
                    #endregion
                }
                return this.mUITxtKhachThanhToanEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtKhachThanhToanEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITẠOHÓAĐƠNXUẤTBILLWindow : WinWindow
    {
        
        public UITẠOHÓAĐƠNXUẤTBILLWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnTaoHoaDon";
            this.WindowTitles.Add("                                                       Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinButton UITẠOHÓAĐƠNXUẤTBILLButton
        {
            get
            {
                if ((this.mUITẠOHÓAĐƠNXUẤTBILLButton == null))
                {
                    this.mUITẠOHÓAĐƠNXUẤTBILLButton = new WinButton(this);
                    #region Search Criteria
                    this.mUITẠOHÓAĐƠNXUẤTBILLButton.SearchProperties[WinButton.PropertyNames.Name] = "TẠO HÓA ĐƠN & XUẤT BILL";
                    this.mUITẠOHÓAĐƠNXUẤTBILLButton.WindowTitles.Add("                                                       Bán hàng");
                    #endregion
                }
                return this.mUITẠOHÓAĐƠNXUẤTBILLButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUITẠOHÓAĐƠNXUẤTBILLButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtMoTaWindow : WinWindow
    {
        
        public UITxtMoTaWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtMoTa";
            this.WindowTitles.Add("                                                       Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtMoTaEdit
        {
            get
            {
                if ((this.mUITxtMoTaEdit == null))
                {
                    this.mUITxtMoTaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtMoTaEdit.WindowTitles.Add("                                                       Bán hàng");
                    #endregion
                }
                return this.mUITxtMoTaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtMoTaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItem0Window1 : WinWindow
    {
        
        public UIItem0Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtTienTraKhach";
            this.WindowTitles.Add("                                                       Bán hàng");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtTienTraKhachEdit
        {
            get
            {
                if ((this.mUITxtTienTraKhachEdit == null))
                {
                    this.mUITxtTienTraKhachEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTienTraKhachEdit.WindowTitles.Add("                                                       Bán hàng");
                    #endregion
                }
                return this.mUITxtTienTraKhachEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtTienTraKhachEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIThôngbáoWindow : WinWindow
    {
        
        public UIThôngbáoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thông báo !!!";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Thông báo !!!");
            #endregion
        }
        
        #region Properties
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Thông báo !!!");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Thông báo !!!");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIFrm_ChonTienWindow : WinWindow
    {
        
        public UIFrm_ChonTienWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "frm_ChonTien";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("frm_ChonTien");
            #endregion
        }
        
        #region Properties
        public UIKháchĐưaĐủWindow UIKháchĐưaĐủWindow
        {
            get
            {
                if ((this.mUIKháchĐưaĐủWindow == null))
                {
                    this.mUIKháchĐưaĐủWindow = new UIKháchĐưaĐủWindow(this);
                }
                return this.mUIKháchĐưaĐủWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIKháchĐưaĐủWindow mUIKháchĐưaĐủWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIKháchĐưaĐủWindow : WinWindow
    {
        
        public UIKháchĐưaĐủWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnKhachDuaDu";
            this.WindowTitles.Add("frm_ChonTien");
            #endregion
        }
        
        #region Properties
        public WinButton UIKháchĐưaĐủButton
        {
            get
            {
                if ((this.mUIKháchĐưaĐủButton == null))
                {
                    this.mUIKháchĐưaĐủButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIKháchĐưaĐủButton.SearchProperties[WinButton.PropertyNames.Name] = "Khách Đưa Đủ";
                    this.mUIKháchĐưaĐủButton.WindowTitles.Add("frm_ChonTien");
                    #endregion
                }
                return this.mUIKháchĐưaĐủButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIKháchĐưaĐủButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIFrm_HoaDonWindow : WinWindow
    {
        
        public UIFrm_HoaDonWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "frm_HoaDon";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("frm_HoaDon");
            #endregion
        }
        
        #region Properties
        public UIXuấtBillWindow UIXuấtBillWindow
        {
            get
            {
                if ((this.mUIXuấtBillWindow == null))
                {
                    this.mUIXuấtBillWindow = new UIXuấtBillWindow(this);
                }
                return this.mUIXuấtBillWindow;
            }
        }
        
        public UIFrm_HoaDonTitleBar UIFrm_HoaDonTitleBar
        {
            get
            {
                if ((this.mUIFrm_HoaDonTitleBar == null))
                {
                    this.mUIFrm_HoaDonTitleBar = new UIFrm_HoaDonTitleBar(this);
                }
                return this.mUIFrm_HoaDonTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIXuấtBillWindow mUIXuấtBillWindow;
        
        private UIFrm_HoaDonTitleBar mUIFrm_HoaDonTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIXuấtBillWindow : WinWindow
    {
        
        public UIXuấtBillWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnXuatBill";
            this.WindowTitles.Add("frm_HoaDon");
            #endregion
        }
        
        #region Properties
        public WinButton UIXuấtBillButton
        {
            get
            {
                if ((this.mUIXuấtBillButton == null))
                {
                    this.mUIXuấtBillButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIXuấtBillButton.SearchProperties[WinButton.PropertyNames.Name] = "Xuất Bill";
                    this.mUIXuấtBillButton.WindowTitles.Add("frm_HoaDon");
                    #endregion
                }
                return this.mUIXuấtBillButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIXuấtBillButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIFrm_HoaDonTitleBar : WinTitleBar
    {
        
        public UIFrm_HoaDonTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("frm_HoaDon");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("frm_HoaDon");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIFrmThietLapGiaWindow : WinWindow
    {
        
        public UIFrmThietLapGiaWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "frmThietLapGia";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("frmThietLapGia");
            #endregion
        }
        
        #region Properties
        public UIThêmsảnphẩmWindow UIThêmsảnphẩmWindow
        {
            get
            {
                if ((this.mUIThêmsảnphẩmWindow == null))
                {
                    this.mUIThêmsảnphẩmWindow = new UIThêmsảnphẩmWindow(this);
                }
                return this.mUIThêmsảnphẩmWindow;
            }
        }
        
        public UITxtTenSPWindow UITxtTenSPWindow
        {
            get
            {
                if ((this.mUITxtTenSPWindow == null))
                {
                    this.mUITxtTenSPWindow = new UITxtTenSPWindow(this);
                }
                return this.mUITxtTenSPWindow;
            }
        }
        
        public UITxtGiaNhapWindow UITxtGiaNhapWindow
        {
            get
            {
                if ((this.mUITxtGiaNhapWindow == null))
                {
                    this.mUITxtGiaNhapWindow = new UITxtGiaNhapWindow(this);
                }
                return this.mUITxtGiaNhapWindow;
            }
        }
        
        public UITxtGiaBanWindow UITxtGiaBanWindow
        {
            get
            {
                if ((this.mUITxtGiaBanWindow == null))
                {
                    this.mUITxtGiaBanWindow = new UITxtGiaBanWindow(this);
                }
                return this.mUITxtGiaBanWindow;
            }
        }
        
        public UITxtMoTaWindow1 UITxtMoTaWindow
        {
            get
            {
                if ((this.mUITxtMoTaWindow == null))
                {
                    this.mUITxtMoTaWindow = new UITxtMoTaWindow1(this);
                }
                return this.mUITxtMoTaWindow;
            }
        }
        
        public UIChọnhìnhWindow UIChọnhìnhWindow
        {
            get
            {
                if ((this.mUIChọnhìnhWindow == null))
                {
                    this.mUIChọnhìnhWindow = new UIChọnhìnhWindow(this);
                }
                return this.mUIChọnhìnhWindow;
            }
        }
        
        public UILưuWindow UILưuWindow
        {
            get
            {
                if ((this.mUILưuWindow == null))
                {
                    this.mUILưuWindow = new UILưuWindow(this);
                }
                return this.mUILưuWindow;
            }
        }
        
        public UIDataGridSanPhamWindow UIDataGridSanPhamWindow
        {
            get
            {
                if ((this.mUIDataGridSanPhamWindow == null))
                {
                    this.mUIDataGridSanPhamWindow = new UIDataGridSanPhamWindow(this);
                }
                return this.mUIDataGridSanPhamWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIThêmsảnphẩmWindow mUIThêmsảnphẩmWindow;
        
        private UITxtTenSPWindow mUITxtTenSPWindow;
        
        private UITxtGiaNhapWindow mUITxtGiaNhapWindow;
        
        private UITxtGiaBanWindow mUITxtGiaBanWindow;
        
        private UITxtMoTaWindow1 mUITxtMoTaWindow;
        
        private UIChọnhìnhWindow mUIChọnhìnhWindow;
        
        private UILưuWindow mUILưuWindow;
        
        private UIDataGridSanPhamWindow mUIDataGridSanPhamWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIThêmsảnphẩmWindow : WinWindow
    {
        
        public UIThêmsảnphẩmWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnThemSP";
            this.WindowTitles.Add("frmThietLapGia");
            #endregion
        }
        
        #region Properties
        public WinButton UIThêmsảnphẩmButton
        {
            get
            {
                if ((this.mUIThêmsảnphẩmButton == null))
                {
                    this.mUIThêmsảnphẩmButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIThêmsảnphẩmButton.SearchProperties[WinButton.PropertyNames.Name] = "Thêm sản phẩm";
                    this.mUIThêmsảnphẩmButton.WindowTitles.Add("frmThietLapGia");
                    #endregion
                }
                return this.mUIThêmsảnphẩmButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIThêmsảnphẩmButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtTenSPWindow : WinWindow
    {
        
        public UITxtTenSPWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtTenSP";
            this.WindowTitles.Add("frmThietLapGia");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtTenSPEdit
        {
            get
            {
                if ((this.mUITxtTenSPEdit == null))
                {
                    this.mUITxtTenSPEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTenSPEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Giá bán";
                    this.mUITxtTenSPEdit.WindowTitles.Add("frmThietLapGia");
                    #endregion
                }
                return this.mUITxtTenSPEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtTenSPEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtGiaNhapWindow : WinWindow
    {
        
        public UITxtGiaNhapWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtGiaNhap";
            this.WindowTitles.Add("frmThietLapGia");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtGiaNhapEdit
        {
            get
            {
                if ((this.mUITxtGiaNhapEdit == null))
                {
                    this.mUITxtGiaNhapEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtGiaNhapEdit.WindowTitles.Add("frmThietLapGia");
                    #endregion
                }
                return this.mUITxtGiaNhapEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtGiaNhapEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtGiaBanWindow : WinWindow
    {
        
        public UITxtGiaBanWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtGiaBan";
            this.WindowTitles.Add("frmThietLapGia");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtGiaBanEdit
        {
            get
            {
                if ((this.mUITxtGiaBanEdit == null))
                {
                    this.mUITxtGiaBanEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtGiaBanEdit.WindowTitles.Add("frmThietLapGia");
                    #endregion
                }
                return this.mUITxtGiaBanEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtGiaBanEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITxtMoTaWindow1 : WinWindow
    {
        
        public UITxtMoTaWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtMoTa";
            this.WindowTitles.Add("frmThietLapGia");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtMoTaEdit
        {
            get
            {
                if ((this.mUITxtMoTaEdit == null))
                {
                    this.mUITxtMoTaEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtMoTaEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Mô tả:";
                    this.mUITxtMoTaEdit.WindowTitles.Add("frmThietLapGia");
                    #endregion
                }
                return this.mUITxtMoTaEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtMoTaEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIChọnhìnhWindow : WinWindow
    {
        
        public UIChọnhìnhWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnUpLoadHinh";
            this.WindowTitles.Add("frmThietLapGia");
            #endregion
        }
        
        #region Properties
        public WinButton UIChọnhìnhButton
        {
            get
            {
                if ((this.mUIChọnhìnhButton == null))
                {
                    this.mUIChọnhìnhButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIChọnhìnhButton.SearchProperties[WinButton.PropertyNames.Name] = "Chọn hình";
                    this.mUIChọnhìnhButton.WindowTitles.Add("frmThietLapGia");
                    #endregion
                }
                return this.mUIChọnhìnhButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIChọnhìnhButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILưuWindow : WinWindow
    {
        
        public UILưuWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnLuu";
            this.WindowTitles.Add("frmThietLapGia");
            #endregion
        }
        
        #region Properties
        public WinButton UILưuButton
        {
            get
            {
                if ((this.mUILưuButton == null))
                {
                    this.mUILưuButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILưuButton.SearchProperties[WinButton.PropertyNames.Name] = "Lưu";
                    this.mUILưuButton.WindowTitles.Add("frmThietLapGia");
                    #endregion
                }
                return this.mUILưuButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILưuButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDataGridSanPhamWindow : WinWindow
    {
        
        public UIDataGridSanPhamWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dataGridSanPham";
            this.WindowTitles.Add("frmThietLapGia");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("frmThietLapGia");
            #endregion
        }
        
        #region Properties
        public UIRow5Row UIRow5Row
        {
            get
            {
                if ((this.mUIRow5Row == null))
                {
                    this.mUIRow5Row = new UIRow5Row(this);
                }
                return this.mUIRow5Row;
            }
        }
        #endregion
        
        #region Fields
        private UIRow5Row mUIRow5Row;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIRow5Row : WinRow
    {
        
        public UIRow5Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinRow.PropertyNames.Value, ";hihi;3;1000.0000;20000.0000;san phamhihi;\"/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAYEBQ" +
                        "YFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKS" +
                        "j/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKC" +
                        "goKCgoKCgoKCj/wAARCADhAOEDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQ" +
                        "oL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2Jygg" +
                        "kKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJip" +
                        "KTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09f" +
                        "b3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AA" +
                        "ECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERU" +
                        "ZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tb" +
                        "a3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6gHS2+v" +
                        "8A7KasVXHS2+v/ALKasUAFNl+4adTZfuGhAVqbTzTTWqASkpaSmAlJS0UAJSUtIaACobm4htoHmuZY4Y" +
                        "UGWeRgqqPcmsrxXr9v4f0i5vJ/nMSZCDuew9q+W/FGueI/Et1Jc3RupYyxZYwrCNfQAdBj86TaW5UYtn" +
                        "1PbeJNEupVjttX0+WRjgKlwhJ/DNeW+LPi1qmneJrmy0zTbaSxtpWhZ5SS0hU4YgggAZz2P64rwe4j1C" +
                        "zMct3DNGrfdBBA/GprLU52MizOXQkkq5yDn/8AXSvfYpQtufYXhHxBa+JtDg1Gz+UONskZOTG46qfp+v" +
                        "WtuvHP2fNWszpV/p5mVLkT+akbNgsu0DI+mOfwr2Ic9KZDVmKKWilpiAUtFFABRRRQBYt/uH61LUVv9w" +
                        "/Wpaye4BUK/wDH3J/uL/M1NUK/8fcn+4v8zSAzaKKKANAdLb6/+ymrFVx0tvr/AOymrFABTZfuGnU2X7" +
                        "hoArmmtTqa1aIBKSilqgEpKU0lACU1/umnVU1aXyNNupQcFI2YH04oA8Q8bXsvjDxwdFtmZbCw+eUg8M" +
                        "x7/Xrj2rrbTw1ZJBGgjwFHr1rgtL1GLw/qTybrKW+v9s88LzFZfmyVC5GMgHoetenWWoRTWS3HKR4ydw" +
                        "wR9a4q3xHo0VaJzvjDTltrHzooUkjUY8tlyK86vY9Lv9sL6XDFLOMLKgwd3Y/nXsFxrejX1s9u8zDIwW" +
                        "aJ9v54xXlHiaB7HVLMpgx4KxsvIODx+mKmOjKkk1dmZ8NLx9K8Z6Z5pUrBL5UhBAwrfKT/AOPD8q+rVF" +
                        "fHfh55LzxZH5cZ82SQRqB2bNfYcRJjGeuOa7Y7Hnz3H4oopaogKKKKACiiigCxb/cP1qWorf7p+tS1k9" +
                        "wCoV/4+5P9xf5mpqhX/j7k/wBxf5mkBm0UUUAaA6W31/8AZTViq46W31/9lNWKACmy/cNOpk3+rNCArm" +
                        "m9aXNJWqAKKKQ0wENBopKACquqwfadNuoD/wAtImX8xVqmS48ts8DBzSA8l1PwfY6mqzXSxOnys4bIJK" +
                        "jAPBGeCa3dP0sxaM8MbEswOwt+lc9rWqmwMMFxOsCyOVQyDhm/u/X2rd0bVpL+ERhrQAL1SXcfyrz27v" +
                        "U9jlajeJxsPhfxGNUW5stZntpQSXR1Lxuc+mcBe2OtbXjLRA2jC4ljijkhZZG8sfLnOSR+tdLp+o7JHh" +
                        "mAEyHn3HqKg8TMsuj3EbsoEo2jJ7noKLoTizgfAPhQafq0Oo3roWN6vlbQCAGZRhueDzxxXvkfSvn7xJ" +
                        "4kWDxn4c0izlRrS2ulmuHQ/efsv4fz+lfQKHKg+vNdlJtxuzz8QkpWQ6lpKWtTAKKKKACiiigCxb/dP1" +
                        "qWorf7p+tS1k9wCoV/4+5P9xf5mpqhX/j7k/3F/maQGbRRRQBoDpbfX/2U1YquOlt9f/ZTVigApkx/dm" +
                        "n1HP8A6s01uBVpaSitQCkNGaSgAopM0UAFRXgDWsqk43KV/Opc4rkvidr7+H/Ct1cWxBvWGyBcZO7HXH" +
                        "sAfxxUyairs0o0pVpqnDdnBX9yviHV9UsZo1juYJFljUHkdMMPcEdR6itOx029u4/L1BomVf4zChb88V" +
                        "5D8Nob9devNZvpJPtEieWoc5PJBJP5CvU01XVJv3MWyNT1cLk151Vrmue3ScoR5FZmokFloqlVZz7ySF" +
                        "2/MmvMfjPrk1zbwWKM0duIXuCOhY7lQZ9vnNejQaaCRJcO0snXLHNeRfFrNxqpkt1ZxEv2ZtoySCCSB+" +
                        "JX8RSpy99XCVKVSDUNWtTBsJo/tWhvFnzfswkbPqkjKMf8BQfrX2VpcwuNOt5V5Dxhgfwr4Xi1AQazaH" +
                        "5litgkOCMEDndn8Sfzr7J+G9/9v8I6e5IJSPyzj/Z4/pXowPFqI6kUtNpasyFooooAKKKKALFv90/Wpa" +
                        "it/un61LWT3AKhX/j7k/3F/mamqFf+PuT/AHF/maQGbRRRQBoDpbfX/wBlNWKrjpbfX/2U1YoAKjn/AN" +
                        "WakqO4/wBUaa3AqUUlGa1AM0lFBNACVz3iHxdpeiMY5pGluR/yxiGSPqegqL4ha5JoXhyW4tiBdSMIou" +
                        "M8nJJHuADXzo99LezTSTuHO7BLZwc85IP481z1qzhotz3cpyqOKXtaz93t3PSfEHxM1G43JY+XYRHjIO" +
                        "5z+J/oK4rVL+e4tLe4uZpZjJNIJGkJJPCjvWSMqzDDDI+vHv6j9avXLY8P2hCLIonlUqrZ42x9PTr0rg" +
                        "qTlJptn19DDUKDjGjBL89mdh4V0qO6tTJDjOcMB2NdbZ6eYlBZea8s8K+NLLRtaEBnUsY8TRM20YHv03" +
                        "D0+ucV7FYa5pd/phvoLuIWyj52ZgNv1pqN1qfO4+g6VV+y1jfp08jO166Gm6XLcN1UYQf3mPQV5KsIvL" +
                        "yNGBdmbLH1Yn/GrPjvx9p95rccIkkawgYqrxruTd/eb+gGT+dXNAa3mvLCWF43iaVG3IQQRn1qKl0j2s" +
                        "qpU6FKcpP37bdkcz4g0fRtQ1a+Lv5ZadwXB28buOSMdq9g+DeqW2maONKu76OVkc+VL0DA468nB49e9e" +
                        "NlmuJywHPUnG3A/p/Orlsgiw6tsI6MMj8gOfxranVlTSMsVlmHxUfejZ90fV0brIoaNlZT0KnIp+a+dP" +
                        "D3iDU7C6QxXUiKnzbdwG72YDgivWdB8dWWoSpBeRm1mYcMTlCfr2/zzXXDERlo9D5vGZHXw654e9Hy/w" +
                        "Ajs6KaDTq6DxAooooAsW/3D9alqK2+4frUtZPcAqFf+PuT/cX+ZqaoV/4+5P8AcX+ZpAZtFFFAGgOlt9" +
                        "f/AGU1YquOlt9f/ZTVigAqK5/1JqWorr/Un8Ka3ApUUUZrUAoNJRmgDyn47XflRaLDuwPNeRvYYC5/U1" +
                        "43aki8uxnkENxyw6g4Hpx0r2jx/Z2niLxM+mXizwSLCFgnRsq3DMQVI9m5B7V4tc2z2fiPUbEyCUxMAW" +
                        "HG4gkEj06VwV4y5uZn2+S4mk8LGjH4o6v5krOq4xjrwFPH4H+E+1PnuZZLI2ucAMXBGA65AB9j90dOla" +
                        "mj2tpdWMgSaKO/zkiZdwZR/s9+3Iz36VHqxsI7MQxFJ7jcv79BsReuQMcDtziuXmTdrHe6ylLltscdNo" +
                        "9vNIAIg3PUdB9R1FdNa2OnQ+FZbMwSLeNJvMqznaF9COn447/nWOIeobfjJLcEfT+8PrWzrItE0K2+z/" +
                        "aRdgYnL42exX0rRyZcKVNNtxfy/XyORltIXEdtEgaNT2HB/A/zNWNOgfTLzz9NkaLPDRg5VuOuTwP51p" +
                        "eHY0m1qwSRQ6yXCKQ3IYbhkf7X0Ndvb2lnOsnnm2iZF3KrQKd59OlZ1KvJoyGo66bHDxbEQIv3upyOM+" +
                        "w7n3q6g2RlTneeWA5Y/U9B/nFbGvW0Y0hZI4Ylm+0IodEVCF2tkEgZ7CsSK28sfvzvxyUPAH4d6E7q5v" +
                        "Byk2rbEtgdqHGNvbGf59/rWjb32z5WYFTxjPIrMaeM4MZBXHam71b7qk+5FTfW56MYJQSPbvAnis3EH2" +
                        "S/ZSkIVEmUHOMHG78B1/Ou9RgyhlIZSMgg5zXz5pdqwUHTZnJIBQLlQuMFmYjndnt9Oo5rotM8fT6UUS" +
                        "5XdFnbjHDgHBb1Xpj0JzxXqwlywTkz82xeHeIxkoYeFtdj2OisbQPEWna5DusZ1LgZaMn5lrYrVNSV0e" +
                        "bUpTpScJqzRZtvun61NUNr9w/Wpqze5AVCv/H3J/uL/M1NUK/8fcn+4v8AM0gM2iiigDQHS2+v/spqxV" +
                        "cdLb6/+ymrFABUN1/qTU1Q3f8AqD+FNbgUc0tIKK1AWkzgZPaiqGv3QstD1C5bb+6t5HG7oSFOBSbsrj" +
                        "hFykorqedwz2UOoXuqXch+3lZJzGy4wgBPHHp/M9eteEX9zKda+1McySswc+pPzZ/MGvRNQ8SqfDtzpt" +
                        "taPCbhgzsZ2dVAxwoPIHyjjPc+teaa0QhVySBuHP41wVaim0kfd5Xl1TCUpyrKzb/BG/FIlzDmQYb+8e" +
                        "/v9fpR5bxvnqSMggZP4j/JrPhnzHHt4O0Z4+7/APXq1BOxGBnIP3c/zNYbHqqCl6i7VLfvG46AD7o/Hq" +
                        "K0dUmjaFFj6swbABz9QDV3RfC17r9jc3lpIi+TJFEvGA7uwUAewznJ/CrmteAjYWN7cW2pQXr2TKLuFI" +
                        "mj2E8cE9fwquRtcxySxlOnJ0b6vT+u25y1qMyeZCzCUc7kYgg57nr+VaD6rd2+Gk1C8cdQqyMVP6/41R" +
                        "VdijZkY4x0YD+oqaHLEhmGD3xw3qCOx96h6nVGjH7Wo2+8TT3MIi8yZlU55UcH3H581ltPdzY2xMR1Az" +
                        "n8j/StxoIo8OwwQM5JwfwPf8a2dA06xntze6vMYrIjKRIDvlHqVHIHvxnrUOXLolfyWrMsTXo4Om51ZK" +
                        "KORsLkmQRuHaUnkIvOfpW/b28zoxFrd/IcMWhYAfpXc6kTaaLbS6Fsi0xhhzGNjZz90kfd+o7jk8itbw" +
                        "pqw+z+TdxTGJcuJ/LOBkknd2Hr7fQZpSp1nh3iIRvZ2tfVW7+fkfNPjKnHELDqOnRvZ/13PNLO7mtZN1" +
                        "uw64KnkU6a5MpaSYhmbrXqviHwtpmtgSXECGVl+SeL5XHp83f8eK85/wCFf+IpL6WGwgiuoI+RMZVQ/Q" +
                        "qTnP0yKww+J9t7mz7HvYfNMLN+1mlF9/8AglPSZrpL6L+z9/2gt+7EZwc19BeH76aSygh1CRXvAvzsBg" +
                        "MfavOvAmjR6fZ+fIpa9kGHZh9z1UV1LSFORwRXpUJODPDzvFQxslGC0XXq/wDgHeWv3D9anqrppLWqlv" +
                        "vEAn64q1XY9z5cKhX/AI+5P9xf5mpqhX/j7k/3F/maQGbRRRQBoDpbfX/2U1YquOlt9f8A2U1YoAKhvP" +
                        "8Aj3b8KmqC8/1DfUU1uBQBp1MorUQ+uQ+Kl2LfwbdICA1w6RD88n9FNdbmo7i3huYzFcRRyxN1R1DA/g" +
                        "ama5otI3wtVUa0KkldJpny25wuGB965fxIB9lcdsHmvojxx4N02S7tTZxLZ+aG3+UMAkY7dO9eW+PvA0" +
                        "tlps00N4kihSdrJtP8zXm+zdOVmffLOsNiaOl030ZxOmzFo4d5w3lKTgdyOTWhZ5ZnUDODkqTwPc1h6a" +
                        "xGpS46KvOPwHpW5azILkxqGUsOjD/OaU0dWEkqiV2ex/Cdv+JDqMW7cyXdvIT6Dev/AMSammDeV8QIJA" +
                        "Ccq+PUHcf5VifC+Yy2HiO1QkNJZMy4PIIBH/s1dEy6vb2+vW2tRW0m7THkF7DDjzCBgBnwMkDtW0dYL+" +
                        "u54WKgqeLq2a1cdOu8Xp9x5P8AZyI8J8wByATyPoaSWWKCIySHZs6kcMPqO9PW6RG2nO4isHVmfUZgpO" +
                        "IVO0e/+RzXLHV6n1FZKEbrcS1m/wCEh1tLSdmj0yFTPdBTjei84/Hpj3r3Dw+8Gq6ZFHLbpFbSjEQUBQ" +
                        "nb5TjqO3+RXkvgfS0uG1JbdAoMsMbjIH7sHccn349O1e8aVCkdvGFRFWNAoIGBwPzx9a8/MMTTpR0+JP" +
                        "TXbT82/wAEfCZiq1fEtTfu2/r5Gd4Vtm06zmef5jLNgIpwAF4Jx/vcflmuktraZ43jDuGbLqSc8enP+R" +
                        "XNeGtZtr1Z4URmuIXZ1Un76s27I+hPI+ldHo94TG8qZfOfv5GD+o/EVy4ucvrU3iVy/wBafgeZgFT+rR" +
                        "VF3X9XMjX7K9s40n0QEsrYktxgBueoB4znrxz+FUtH13V/7VQXNobYKjSyMYSu5R2yTjrjpUvjS/eysy" +
                        "lu05ubqQAGAfOiLycfj/6EaxvD2s3D6tFa3NzPLHJG37maPa6lcMDnkkHB4r1qEJywUsRGMXa9pa82nX" +
                        "s7dL9jy6taFPHKgpyV7XWnLr079r2Om0oiRHkGQHdnwe2STU8imS4SIdXYKPxNQaPhbdiuNu9tpHQjcc" +
                        "Vf0dPtGtR91jBc/wBP1xXRhm6kYyfU9+s+W/kdxZjEZx61PUFn9xvrU9eg9zyQqFf+PuT/AHF/mamqFf" +
                        "8Aj7k/3F/maQGbRRRQBoDpbfX/ANlNWKrjpbfX/wBlNWKACobz/UN+FTVBef6g/UU1uBn0UUVqIKUUlF" +
                        "AGB4qZftFip6/Of5Vxvji0NzpUgHQqa6XxY+NWtR2EWf1NUtTQTae6kdq4a3xs9TD6Qiz5svNLl0bVmW" +
                        "4QJ9ohimjA7oy54/M/lUUp8qeJk+Xnt8n/ANY19G+K/A+leJPB9jcXSSR39jYq0E8RwflTO0jupP488V" +
                        "83SXENzGWt5A4U5IU9B7qaU6bifQZbjY1oOHVG9pmq3FjM3lXE0JdSrPGxQ49Gx2/StqbXdSurTyJ9Ru" +
                        "pbcj7jTMykduM1yIcbPlI65Xtg+3p9KY9w21wpKgj5kXjn3Hb+tY8r6HtqrBO84psuSXDS3e2NC8XRig" +
                        "ycU9Y3mYNgAZIA6ZPf8P6CoLSaJY/LdimTgIgzn8e5/wA/Wxdaja20OHeJMDYE3Z/D/E/hSs9kOVVSTl" +
                        "Nmh4C1pNH8SXiXBP2eZFZpAOFIPX6c/wAq9T1fXJX0Z/7NtrmZJBgyCFgMH0yM8+vQDvnAr5xvfEX2S/" +
                        "in0+MSeWTvMo+WUHqCPQj/ADnp7z4V8Qwa9pkdzauy2zRgkRthonHVMdsevGQR2rzswowoVYYqcL99dN" +
                        "PI+Oxs/rM6lKlU0fZCeF4fM14yvOPsmnK0skqnCsxz/Pkn2GK1tN8R6lqsszwvDb2aElWKZYLnA6nBPb" +
                        "659Ktamv8AaOltp4dl+0R4E6g9c8A+3b15+tY+k25stPSNo2MkbMsqg5AYHbjjnnj169up2njqGKozxF" +
                        "SKc9IxT1stby9W7+mh85DLq2HrwoQk1DWTa0u+i+SOmsRpt1J5dxH51x2FyfMJ4zkA8A9fujFJrFpaac" +
                        "sd/bW8cckDcqi7Qwb5TwO/OfXjFUdPljsbW4vZQV2qdo6cdzt/z0qUJf6sltIUMNkZldi/3nx8wUfiBz" +
                        "7H1FeDReIq1+WDbXXXS3X8D3XhqMY6xSfQ2IB9nsY1PUKATW94Vttlq9y4+eY8f7orGMDXVzFbJwWOCf" +
                        "QdzXZRRrFEqRjCqAoHoK+0w1Oyv2OTFVNOUu2f3G+tWKr2f3G+tWK2e5xBUK/8fcn+4v8AM1NUK/8AH3" +
                        "J/uL/M0gM2iiigDQHS2+v/ALKasVXHS2+v/spqxQAVBef6g/UVPUF7/wAe5+oprcDPopKK1ELRQKKAOR" +
                        "8ZArqVo/rGR+R/+vVSY5tG+laXjVP+PKTsGZT+OP8ACstj/obfSuCt8bPVw+tJHXWAEei2wfAVbZc56f" +
                        "dFfA91/wAfDlTjk19mfFfXD4d+GV9cxSGOeSFLaEgc7nwP5bjn2r4wcEsTmu7oeanZ3RJDf3UP3J3HGO" +
                        "Tmpv7Vut2SwPGOmP5VSw2B0NKM56VLhF9DeOLrxVlN/eXW1C5l3ZlZQRjCfKMenFQdetRjP0pQcsVJ5H" +
                        "NNRS2M6lapU1m2wkUMKn0TWb/Qbrz9PmKBvvxnlX+o/r1qKowoMuw9+VpThGa5ZK6ITcXdHt/h3xzcap" +
                        "9heSNY7cIRcvFOBsOOPlIznNdta6zolpOLp9Qmf7a5wHlGxmXAOAAORx156e1fN2j3Nxpt6JbdyknTPU" +
                        "H6juK9s+FgHjK0urkWdt/aNiwEqoPmwR8rjPY4YY68e9easuo0tIQVv6Z6FPEqdud6np6XthcxgGGNl9" +
                        "CtXFuoSqnOQg+Vc8D6Vh6fomp3ZGy2eJf70w2fz5rpdO8LbGDX1xv/ANiMYB/GtoUX0VgnVpx3Zd8Nwb" +
                        "/NvHHLHYn07n8/5VuE0xFWNFRAFRRgAcACgmu2MeVWPPnNzlcu2J/dt9as1Wsf9W31qzUPckKhX/j7k/" +
                        "3F/mamqFf+PuT/AHF/maQGbRRRQBoDpbfX/wBlNWKrjpbfX/2U1YoAKr33/HufqKsVXvv+Pc/UU1uBnU" +
                        "tNpa1ELS0lKKAMPxfHv0oMP+Wcit/Mf1rA27rNh7V1uuR+ZpNyD2Xd+Rz/AErmIRmPHtXHiF7x6GFfuW" +
                        "PM/wBprxIg0jQ/D0YBkmVb+U55VQCqD8SW/wC+a+dnOEPsK674r6jdah8QNU+2f8uojtYl/uoigD8+v4" +
                        "1xsx/dmuqLurnG1Z2JcYX6VGT++QdiDUgPWoZjtmiPvVEk2PSopG2Txt2PBqbPNQXXKZ9KALTVFNwUYc" +
                        "EGnxtvjVvalkG6NvzoA0F5WOQdCPyru/glrv8Awj3xIsvMfbaX+bSX0+Y/Kf8AvoL+Ga4LTG32+xuueK" +
                        "kkLRSxyISrq2QQeQRQB96Zpc1heB9cTxJ4U03VUI3XEQ8wDtIPlcf99A1uUEgeaKKKAL1h/q2+tWaq2H" +
                        "+rb/eq1WT3GFQr/wAfcn+4v8zU1Qr/AMfcn+4v8zSAzaKKKANAdLb6/wDspqxVcdLb6/8AspqxQAVXvv" +
                        "8Aj3b8KsVXv/8Aj3b8Ka3AzRS00UorUQopaSloAp61II9JuSx4KFR9Tx/WuTsenXPFa3jG42W9vCD95i" +
                        "x/DgfzrFsiQBmuKu7yselhI2hfufN3xus1tPiDdunH2iKOU/XG3/2WvPbg4jJ969a/aKjVfFOnyj772u" +
                        "G+gY4/ma8juuYjXTS+BHJWVqjLANV7zsR2qSI5RT6imXIytaGRODkZpkozGRREf3a/Sg0AFm2YyPSrUf" +
                        "LY7HiqEDeXJ7Zq6p5oAfYuUZlPWtKcb13DoeaypPlujjvz+daNs++MrnkHIoA+h/2YtZE2iano8jfPby" +
                        "i4jBPVXGDj2BUf99V7bXyP8ENYOi/ETTgzYhvCbST33/d/8fC19cUCYUGig0CLun/6tv8Aeq1VXT/9W3" +
                        "+9VqsnuMKhX/j7k/3F/mamqFf+PuT/AHF/maQGbRRRQBoDpbfX/wBlNWKrjpbfX/2U1YoAKr3/APx7t+" +
                        "FWKr33/HufwprcDMpaKWtWAUClooEcb47LLNbO4kWILgOoz8xPT+VYUWomCMeYM/vggxycsQB/OvTpEW" +
                        "SNkcZVgQR6iuE8ZaFHpWj3OpWXnNHask8kKruOwMN5B9ly2PauWrSbfMj0MPiIqKhLQ+d/j7ffavHMcQ" +
                        "/5d7VFP1JY/wAsV5jc/wCrNdl8UtRttV8YXF3YzpcQtGi70ORkDpmuMuPu1tSVoo5qzvNj7U5hWnTcrU" +
                        "dof3X41LJ0rQyEh+4PypxpsYwDTqAIZBhqtxncoqvIuVp9u3GD2oAtz/8ALFvUbfy//XUkZKnI6g1oaB" +
                        "oeoeI54rDSLZrm8LFljVgCRjnkkCvd/AfwJgSGO78YSu8zfN9hgfCr7O46n2XH1NAHk/w/0DVfEniO0i" +
                        "0VCs0TrK85HyQAHO5j+HA6mvs9c7Rnk96z9E0XTdDsxa6PY29nBnJWFAu4+pPUn3PNaWKCRtFOI9KbQB" +
                        "d0/wD1bf71WqrWP+rb61ZrJ7jCoV/4+5P9xf5mpqhX/j7k/wBxf5mkBm0UUUAaA6W31/8AZTViq46W31" +
                        "/9lNWKACq99/x7n8KsVXvv+Pc/UU1uBm5pc03vS4rYkXNKDSUUWC47NIyq6lXAZSMEEZBFRknccHilyc" +
                        "daQ0fI/jv4bXUd9cXfh9UktpHLC1HymL2XJwRXATeF9d3bP7Ivi3tAxH54xX1KgBkw1PnijEZKqM/SuT" +
                        "28k7HpPCwlqj5Gls7iwd7e8hkgnU/NHIpVh6cGmn5hXvXjDwlp2vS+bOHhulG0TRdSOwI71V8L/Ag6xb" +
                        "yzya6YYlbauLTcT6/xj2ranUUtDmq0XT16HhyjDUpr6c079njRYpFN/rF/cKOqxIkQP57qwrrwVoOl61" +
                        "eW9pp8bJDMyKZsyHAOB97NVOagrk0qTqOyPCLOzub1/Ls7ead/7sSFj+ldRpHw58RX8ilraO1Rv4p5AP" +
                        "0GT+le66dYpHEEjRUQdFUYArYt7cJ2rB129jpWFit2Ufgr8O7Xw1eTahPN9svhHtDFAFiJ67e+cZGc9D" +
                        "0r1+sbwrFssXf+82PyH/162a3g243ZxVElJpCg4pc02irIFzSUVHcJJJHtilMTZ+8FBoBK7NGx/wBW31" +
                        "q1VDSITFE+6RpGZskn1x2Har9ZPcbSWwVCv/H3J/uL/M1NUK/8fcn+4v8AM0gM2iiigDQHS2+v/spqxR" +
                        "RQAVWv/wDj2b8P50UU1uBmpS0UVuSxRS0UUARD7zfWnCiipGeXD/XN9TUs3+roorznue4vhRzt7978a9" +
                        "M+H3/Iv/8AbVv5CiitqHxHLi/gOkrxfWv+Rk1D/r5k/wDQjRRWlfZGOD+JmlZ/cFaC9BRRXKjvO18O/w" +
                        "DIMX/eNadFFd8PhR49X42FFFFUQFItFFCAvWH+rb61aoorKW4wqFf+PuT/AHF/maKKQGbRRRQB/9k=\"", PropertyExpressionOperator.Contains));
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("frmThietLapGia");
            #endregion
        }
        
        #region Properties
        public WinCell UIItem25Cell
        {
            get
            {
                if ((this.mUIItem25Cell == null))
                {
                    this.mUIItem25Cell = new WinCell(this);
                    #region Search Criteria
                    this.mUIItem25Cell.SearchProperties[WinCell.PropertyNames.Value] = "25";
                    this.mUIItem25Cell.WindowTitles.Add("frmThietLapGia");
                    #endregion
                }
                return this.mUIItem25Cell;
            }
        }
        
        public WinCell UIHihiCell
        {
            get
            {
                if ((this.mUIHihiCell == null))
                {
                    this.mUIHihiCell = new WinCell(this);
                    #region Search Criteria
                    this.mUIHihiCell.SearchProperties[WinCell.PropertyNames.Value] = "hihi";
                    this.mUIHihiCell.WindowTitles.Add("frmThietLapGia");
                    #endregion
                }
                return this.mUIHihiCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIItem25Cell;
        
        private WinCell mUIHihiCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOpenWindow : WinWindow
    {
        
        public UIOpenWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Open";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UITreeViewWindow UITreeViewWindow
        {
            get
            {
                if ((this.mUITreeViewWindow == null))
                {
                    this.mUITreeViewWindow = new UITreeViewWindow(this);
                }
                return this.mUITreeViewWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIOpenWindow1 UIOpenWindow1
        {
            get
            {
                if ((this.mUIOpenWindow1 == null))
                {
                    this.mUIOpenWindow1 = new UIOpenWindow1(this);
                }
                return this.mUIOpenWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UITreeViewWindow mUITreeViewWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIOpenWindow1 mUIOpenWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UITreeViewWindow : WinWindow
    {
        
        public UITreeViewWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "100";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UIQuickaccessTreeItem UIQuickaccessTreeItem
        {
            get
            {
                if ((this.mUIQuickaccessTreeItem == null))
                {
                    this.mUIQuickaccessTreeItem = new UIQuickaccessTreeItem(this);
                }
                return this.mUIQuickaccessTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UIQuickaccessTreeItem mUIQuickaccessTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIQuickaccessTreeItem : WinTreeItem
    {
        
        public UIQuickaccessTreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Quick access";
            this.SearchProperties["Value"] = "0";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIChinhAnhIconTreeItem
        {
            get
            {
                if ((this.mUIChinhAnhIconTreeItem == null))
                {
                    this.mUIChinhAnhIconTreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIChinhAnhIconTreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "chinhAnhIcon";
                    this.mUIChinhAnhIconTreeItem.SearchProperties["Value"] = "1";
                    this.mUIChinhAnhIconTreeItem.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIChinhAnhIconTreeItem.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIChinhAnhIconTreeItem.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUIChinhAnhIconTreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIChinhAnhIconTreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Items View";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public UIItemsViewList UIItemsViewList
        {
            get
            {
                if ((this.mUIItemsViewList == null))
                {
                    this.mUIItemsViewList = new UIItemsViewList(this);
                }
                return this.mUIItemsViewList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemsViewList mUIItemsViewList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemsViewList : WinList
    {
        
        public UIItemsViewList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Items View";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinListItem UIGaijpgListItem
        {
            get
            {
                if ((this.mUIGaijpgListItem == null))
                {
                    this.mUIGaijpgListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIGaijpgListItem.SearchProperties[WinListItem.PropertyNames.Name] = "gai.jpg";
                    this.mUIGaijpgListItem.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUIGaijpgListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIGaijpgListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOpenWindow1 : WinWindow
    {
        
        public UIOpenWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Open");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Open");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIThôngbáovuiWindow : WinWindow
    {
        
        public UIThôngbáovuiWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thông báo vui!";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Thông báo vui!");
            #endregion
        }
        
        #region Properties
        public UIThêmsảnphẩmthànhcWindow UIThêmsảnphẩmthànhcWindow
        {
            get
            {
                if ((this.mUIThêmsảnphẩmthànhcWindow == null))
                {
                    this.mUIThêmsảnphẩmthànhcWindow = new UIThêmsảnphẩmthànhcWindow(this);
                }
                return this.mUIThêmsảnphẩmthànhcWindow;
            }
        }
        
        public UIOKWindow1 UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow1(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIThêmsảnphẩmthànhcWindow mUIThêmsảnphẩmthànhcWindow;
        
        private UIOKWindow1 mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIThêmsảnphẩmthànhcWindow : WinWindow
    {
        
        public UIThêmsảnphẩmthànhcWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Thông báo vui!");
            #endregion
        }
        
        #region Properties
        public WinText UIThêmsảnphẩmthànhcText
        {
            get
            {
                if ((this.mUIThêmsảnphẩmthànhcText == null))
                {
                    this.mUIThêmsảnphẩmthànhcText = new WinText(this);
                    #region Search Criteria
                    this.mUIThêmsảnphẩmthànhcText.SearchProperties[WinText.PropertyNames.Name] = "Thêm sản phẩm thành công!";
                    this.mUIThêmsảnphẩmthànhcText.WindowTitles.Add("Thông báo vui!");
                    #endregion
                }
                return this.mUIThêmsảnphẩmthànhcText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIThêmsảnphẩmthànhcText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIOKWindow1 : WinWindow
    {
        
        public UIOKWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Thông báo vui!");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Thông báo vui!");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIThôngbáoWindow : WinWindow
    {
        
        public UIThôngbáoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Thông báo";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Thông báo");
            #endregion
        }
        
        #region Properties
        public UIThôngtinkhôngđượcboWindow UIThôngtinkhôngđượcboWindow
        {
            get
            {
                if ((this.mUIThôngtinkhôngđượcboWindow == null))
                {
                    this.mUIThôngtinkhôngđượcboWindow = new UIThôngtinkhôngđượcboWindow(this);
                }
                return this.mUIThôngtinkhôngđượcboWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIThôngtinkhôngđượcboWindow mUIThôngtinkhôngđượcboWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIThôngtinkhôngđượcboWindow : WinWindow
    {
        
        public UIThôngtinkhôngđượcboWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65535";
            this.WindowTitles.Add("Thông báo");
            #endregion
        }
        
        #region Properties
        public WinText UIThôngtinkhôngđượcboText
        {
            get
            {
                if ((this.mUIThôngtinkhôngđượcboText == null))
                {
                    this.mUIThôngtinkhôngđượcboText = new WinText(this);
                    #region Search Criteria
                    this.mUIThôngtinkhôngđượcboText.SearchProperties[WinText.PropertyNames.Name] = "Thông tin không được bỏ trống!";
                    this.mUIThôngtinkhôngđượcboText.WindowTitles.Add("Thông báo");
                    #endregion
                }
                return this.mUIThôngtinkhôngđượcboText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIThôngtinkhôngđượcboText;
        #endregion
    }
}
